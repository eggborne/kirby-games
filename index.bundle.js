/*! For license information please see index.bundle.js.LICENSE.txt */
(self.webpackChunkkirby_games=self.webpackChunkkirby_games||[]).push([[826],{1402:(n,e,r)=>{"use strict";r.d(e,{Z:()=>kn});var t=r(7537),a=r.n(t),i=r(3645),o=r.n(i),s=r(1667),A=r.n(s),c=new URL(r(2587),r.b),l=new URL(r(792),r.b),d=new URL(r(816),r.b),u=new URL(r(2154),r.b),g=new URL(r(7016),r.b),h=new URL(r(1852),r.b),m=new URL(r(4174),r.b),p=new URL(r(5677),r.b),C=new URL(r(8405),r.b),b=new URL(r(4930),r.b),f=new URL(r(5305),r.b),E=new URL(r(3578),r.b),y=new URL(r(7837),r.b),v=new URL(r(4237),r.b),k=new URL(r(730),r.b),_=new URL(r(6978),r.b),B=new URL(r(654),r.b),w=new URL(r(538),r.b),x=new URL(r(4909),r.b),S=new URL(r(9623),r.b),D=new URL(r(2605),r.b),T=new URL(r(6386),r.b),I=new URL(r(9813),r.b),L=new URL(r(6863),r.b),U=new URL(r(1960),r.b),z=new URL(r(7025),r.b),F=new URL(r(5227),r.b),O=new URL(r(5292),r.b),q=new URL(r(2148),r.b),M=new URL(r(5579),r.b),R=new URL(r(8322),r.b),P=new URL(r(2021),r.b),j=new URL(r(5719),r.b),N=o()(a()),H=A()(c),G=A()(l),V=A()(d),W=A()(u),Z=A()(g),Y=A()(h),$=A()(m),Q=A()(p),X=A()(C),K=A()(b),J=A()(f),nn=A()(E),en=A()(y),rn=A()(v),tn=A()(k),an=A()(_),on=A()(B),sn=A()(w),An=A()(x),cn=A()(S),ln=A()(D),dn=A()(T),un=A()(I),gn=A()(L),hn=A()(U),mn=A()(z),pn=A()(F),Cn=A()(O),bn=A()(q),fn=A()(M),En=A()(R),yn=A()(P),vn=A()(j);N.push([n.id,":root {\r\n  --actual-height: 100vh;\r\n  --screen-aspect-ratio: (8/7);\r\n  --game-screen-width: 100vw;\r\n  --game-screen-height: calc(var(--game-screen-width) / var(--screen-aspect-ratio));\r\n  --ds-aspect-ratio: (4/3);\r\n  --ds-screen-width: 100vw;\r\n  --ds-screen-height: calc(var(--ds-screen-width) / var(--ds-aspect-ratio));\r\n  --controls-height: calc(var(--actual-height) - var(--game-screen-height));\r\n  --bottom-padding: calc(var(--controls-height) / 6);\r\n  --samurai-kirby-button-width: calc(var(--controls-height) / 2.25);\r\n  --samurai-kirby-button-height: calc(var(--controls-height) / 2.25);\r\n  --button-height: calc(var(--actual-height) / 8);\r\n  --control-panel-bg-color: #586838;\r\n  --level-select-bg-color: #393939;\r\n}\r\n\r\n@font-face {\r\n  font-family: kirbyFont;\r\n  src: url("+H+");\r\n}\r\n\r\n*, * *, * * * {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n}\r\n\r\n.display-none {\r\n  display: none !important;\r\n}\r\n\r\nbody {\r\n  font-family: kirbyFont;\r\n  image-rendering: pixelated;\r\n  width: 100%;\r\n  height: var(--actual-height);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  justify-content: space-between;\r\n  user-select: none;\r\n  overflow: hidden;\r\n}\r\n\r\nbutton {\r\n  font-family: inherit;\r\n  text-shadow: inherit;\r\n  padding-top: calc(var(--button-height) / 10);\r\n}\r\n\r\nbutton::after {\r\n  pointer-events: none;\r\n}\r\n\r\nbutton, .game-selection {\r\n  cursor: pointer;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\n.hidden {\r\n  transition: none !important;\r\n  opacity: 0 !important;\r\n  pointer-events: none !important;\r\n  display: none !important;\r\n}\r\n\r\n#sound-controls {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: calc(var(--controls-height) / 7);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5%;\r\n  padding: 0 10%;\r\n  z-index: 4;\r\n}\r\n\r\n#game-select-screen.hidden + * + * + #sound-controls{\r\n  display: none;\r\n}\r\n\r\n#sound-controls > input {\r\n  flex-grow: 1;\r\n}\r\n\r\n#sound-controls > .icon {\r\n  width: calc(var(--controls-height) / 16);\r\n  height: calc(var(--controls-height) / 16);\r\n}\r\n\r\n#sound-controls > #mute-icon {\r\n  content: url("+G+");\r\n}\r\n#sound-controls > #full-icon {\r\n  content: url("+V+");  \r\n}\r\n\r\n#game-select-screen {\r\n  background-color: #aaa;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-rows: 1fr calc(var(--button-height) * 2);\r\n  grid-template-columns: 1fr;\r\n  transition: opacity 300ms ease;\r\n  z-index: 2;\r\n}\r\n\r\n#game-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: calc(var(--button-height) * 0.15);\r\n  padding: calc(var(--button-height) * 0.5) 0;\r\n}\r\n\r\n.game-selection, .game-selection::after {\r\n  height: var(--button-height);\r\n  width: 80%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.button-area {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding-bottom: var(--bottom-padding);\r\n}\r\n\r\n.game-selection::after {\r\n  content: '';\r\n  height: var(--button-height);\r\n  position: absolute;\r\n  border-image-source: url("+W+");\r\n  border-image-slice: 33.3% 33.3% 33.3% 33.3%;\r\n  border-image-repeat: stretch stretch;\r\n  border-style: solid;\r\n  border-image-width: 0;\r\n}\r\n\r\n#samurai-kirby .logo,\r\n.game-selection .logo {\r\n  --button-logo-height: calc(var(--button-height) * 0.65);\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n  height: var(--button-logo-height);\r\n  width: calc(var(--button-logo-height) * (205/50));\r\n  pointer-events: none;\r\n}\r\n\r\n#samurai-kirby-selection {\r\n  height: calc(var(--button-height) * 1.25);\r\n}\r\n#samurai-kirby-selection > .logo {\r\n  background-image: url("+Z+");\r\n}\r\n\r\n#bomb-rally-selection > .logo {\r\n  background-image: url("+Y+");\r\n}\r\n\r\n#kotd-selection {\r\n  margin: calc(var(--button-height) / 12) 0;\r\n}\r\n\r\n#kotd-selection > .logo {\r\n  --button-logo-height: calc(var(--button-height) * 1.1);\r\n  background-image: url("+$+");\r\n  width: calc(var(--button-logo-height) * (235/90));\r\n}\r\n\r\n.game-selection.selected::after {\r\n  border-image-width: calc(var(--button-height) * 0.3);\r\n  animation: blink-border-image 300ms ease-in-out infinite alternate;\r\n}\r\n\r\n.game-container {\r\n  position: absolute;\r\n  z-index: 0;\r\n}\r\n\r\n#samurai-kirby {\r\n  /* font-weight: bold; */\r\n  color: #402a00;\r\n  text-shadow:\r\n    -1px 0 0 #222, \r\n    1px 0 0 #222,\r\n    0 -1px 0 #222,\r\n    0 1px 0 #222\r\n  ;\r\n  letter-spacing: 1px;\r\n  width: 100vw;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: opacity 300ms ease;\r\n}\r\n\r\n.game-instructions-screen {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: var(--game-screen-width);\r\n  height: var(--game-screen-height);\r\n  background-color: #dbdbdb;\r\n  color: #586058;\r\n  text-shadow: none;\r\n  font-weight: bold;\r\n  z-index: 3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  opacity: 0;\r\n}\r\n\r\n#samurai-kirby-instructions {\r\n  background-image: url("+Q+");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  --width: calc(var(--game-screen-width) * 0.9);\r\n  width: var(--width);\r\n  height: calc(var(--width) / (240/90));\r\n}\r\n\r\n#samurai-kirby #level-bar-highlight, \r\n#samurai-kirby #level-bar {\r\n  position: absolute;\r\n  background-image: url("+X+");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: var(--game-screen-width);\r\n  height: calc(var(--game-screen-width) / 6.55);\r\n  display: flex;\r\n}\r\n#samurai-kirby #level-bar-highlight {\r\n  background-image: none;\r\n  background-color: rgb(82, 249, 82);\r\n  width: 33.3%;\r\n  height: 85%;\r\n  z-index: -1;\r\n  scale: 0.65 1;\r\n  transition: translate 200ms linear;\r\n}\r\n#samurai-kirby #level-bar-highlight.position-1 {\r\n  translate: 0 0;\r\n}\r\n#samurai-kirby #level-bar-highlight.position-2 {\r\n  translate: calc(var(--game-screen-width) / 3) 0;\r\n}\r\n#samurai-kirby #level-bar-highlight.position-3 {\r\n  translate: calc((var(--game-screen-width) / 3) * 2) 0;\r\n}\r\n\r\n#samurai-kirby #level-bar > .level-segment {\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n  width: 33.3%;\r\n  padding-bottom: calc(var(--button-height) * 0.0325);\r\n}\r\n\r\n#samurai-kirby #level-bar .star {\r\n  /* position: absolute; */\r\n  background-image: url("+K+");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: calc(var(--game-screen-height) / 20);\r\n  height: calc(var(--game-screen-height) / 20);\r\n  opacity: 0.5;\r\n}\r\n\r\n#samurai-kirby #level-bar .star.filled {\r\n  opacity: 1;\r\n}\r\n\r\n#button-name {\r\n  position: absolute;\r\n  font-size: calc(var(--game-screen-height) / 18);\r\n  width: calc(var(--game-screen-height / 12));\r\n  right: calc(var(--game-screen-height) / 3.25);\r\n  top: calc(var(--game-screen-height) * 0.72);\r\n  transform-origin: center;\r\n  translate: 50% 0;\r\n}\r\n\r\n#samurai-kirby-instructions-screen .logo {\r\n  border-image: none;\r\n  border-width: 0;\r\n  transform-origin: center;\r\n  transition: all 800ms ease !important;\r\n  /* transition-delay: 3000ms; */\r\n}\r\n\r\n#samurai-kirby-instructions-screen .samurai-kirby-logo,\r\n#samurai-kirby-selection .samurai-kirby-logo {\r\n  --button-logo-height: calc(var(--button-height) * 1.35);\r\n  height: var(--button-logo-height);\r\n  width: calc(var(--button-logo-height) / 0.583);\r\n}\r\n\r\n.showing-instructions .game-instructions-screen {\r\n  opacity: 1;\r\n}\r\n\r\n#samurai-kirby .samurai-kirby-logo-right {\r\n  position: absolute;\r\n  background-image: url("+J+");\r\n  opacity: 0;\r\n  translate: 100% 0;\r\n}\r\n#samurai-kirby .samurai-kirby-logo-left {\r\n  background-image: url("+nn+");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n  opacity: 0;\r\n  translate: -100% 0;\r\n  transition-delay: 3000ms;\r\n\r\n}\r\n#samurai-kirby.showing-instructions .samurai-kirby-logo-right,\r\n#samurai-kirby.showing-instructions .samurai-kirby-logo-left {\r\n  translate: 0 0;\r\n  opacity: 1;\r\n  /* animation: land 600ms ease forwards; */\r\n}\r\n\r\n#samurai-kirby.resetting *:not(.player-status, .veil) {\r\n  transition-duration: 0ms !important;\r\n}\r\n\r\n#samurai-kirby-screen {\r\n  position: relative;\r\n  width: var(--game-screen-width);\r\n  height: var(--game-screen-height);\r\n  background-image: url("+en+");\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: top center;\r\n  overflow: hidden;\r\n}\r\n\r\n#samurai-kirby-screen > .veil {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: var(--game-screen-width);\r\n  height: var(--game-screen-height);\r\n  background-color: white;\r\n  opacity: 0;\r\n  transition: opacity 600ms ease;\r\n  z-index: 2;\r\n}\r\n#samurai-kirby-screen > .veil.showing {\r\n  opacity: 1;\r\n}\r\n#slash-screen, #score-screen {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: var(--game-screen-width);\r\n  height: var(--game-screen-height);\r\n  background-color: #000000;\r\n  z-index: 1;\r\n  display: none;\r\n}\r\n.slash-mark {\r\n  position: absolute;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  transform-origin: center;\r\n  left: 50%;\r\n  top: 50%;\r\n  translate: -50% -50%;\r\n  display: none;\r\n}\r\n.slash-mark.showing {\r\n  display: block;\r\n}\r\n.slash-mark::after {\r\n  content: '';\r\n  position: absolute;\r\n  width: inherit;\r\n  height: inherit;\r\n  background-color: #000000;\r\n  /* opacity: 0.5; */\r\n  transform-origin: right;\r\n  transform: scaleX(1);\r\n  transition: transform 80ms linear !important;\r\n}\r\n.slash-mark.revealing::after {\r\n  transform: scaleX(0);\r\n}\r\n.slash-mark:first-child {\r\n  --height: calc(var(--game-screen-height) * 0.6);\r\n  height: var(--height);\r\n  width: calc(var(--height) * (180/96));\r\n  background-image: url("+rn+");\r\n}\r\n#center-slash {\r\n  --height: calc(var(--game-screen-height) * 0.2);\r\n  height: var(--height);\r\n  width: calc(var(--height) * (54/32));\r\n  background-image: url("+tn+");\r\n  animation: blink 2ms linear infinite, zoom-in 200ms ease forwards;\r\n}\r\n#center-slash::after {\r\n  display: none;\r\n}\r\n.slash-mark:last-child {\r\n  --height: calc(var(--game-screen-height) * 0.9);\r\n  height: var(--height);\r\n  width: calc(var(--height) / (144/65));\r\n  background-image: url("+an+");\r\n}\r\n\r\n#score-screen {\r\n  background-color: transparent;\r\n  font-size: calc(var(--game-screen-height) * 0.08);\r\n  display: grid;\r\n  grid-template-rows: \r\n    calc(var(--game-screen-height) / 8) \r\n    auto\r\n    1fr\r\n    1fr\r\n  ;\r\n  grid-template-columns: 1fr;\r\n  justify-items: center;\r\n  opacity: 0;\r\n  z-index: 1;\r\n  height: var(--game-screen-height);\r\n}\r\n\r\n#samurai-kirby.showing-score #score-screen {\r\n  opacity: 1;\r\n}\r\n\r\n#enemies-defeated, #fastest-time {\r\n  display: flex;\r\n  gap: calc(var(--game-screen-height) / 30);\r\n  align-items: center;\r\n\r\n  align-items: baseline;\r\n  align-self: center;\r\n}\r\n\r\n#enemies-defeated > span:last-child, \r\n#fastest-time > span:last-child {\r\n  translate: 0 25%;\r\n}\r\n\r\n#enemies-defeated {\r\n  padding-top: calc(var(--game-screen-height) * 0.07);\r\n}\r\n\r\n#fastest-time {\r\n  align-self: stretch;\r\n}\r\n\r\n#score-kirby {\r\n  position: relative;\r\n  width: calc(var(--game-screen-height) * 0.45);\r\n  height: calc(var(--game-screen-height) * 0.45);\r\n  translate: -17% 3%;\r\n  background-image: url("+on+");\r\n}\r\n\r\n#total-score {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-self: flex-end;\r\n  font-size: calc(var(--game-screen-height) * 0.06);\r\n  gap: calc(var(--game-screen-height) * 0.01);\r\n  padding: calc(var(--game-screen-height) * 0.04) 0;\r\n}\r\n\r\n.score-numeral \r\n{\r\n  filter: \r\n    drop-shadow(2px 0px rgb(255, 255, 255))\r\n    drop-shadow(-1px 0px rgb(255, 255, 255))\r\n    drop-shadow(0px -1px rgb(255, 255, 255))\r\n    drop-shadow(0px 2px rgb(255, 255, 255))\r\n  ;\r\n}\r\n\r\n.score-screen-display {\r\n  opacity: 0;\r\n  scale: 0.8;\r\n}\r\n#total-score-display {\r\n  display: flex;\r\n  align-items: center;\r\n  transform-origin: center;\r\n  opacity: 0;\r\n  scale: 0.8;\r\n}\r\n\r\n#total-score-display > .score-numeral {\r\n  width: calc(var(--game-screen-height) * 0.07);\r\n  height: calc(var(--game-screen-height) * 0.07 * (16/9));\r\n}\r\n\r\n#samurai-kirby.showing-score .score-screen-display {\r\n  animation: zoom-fade-in 1000ms ease forwards;\r\n}\r\n#samurai-kirby.showing-score #enemy-count-display {\r\n  animation-delay: 1000ms;\r\n}\r\n#samurai-kirby.showing-score #fastest-time-display {\r\n  animation-delay: 1800ms;\r\n}\r\n#samurai-kirby.showing-score #total-score-display {\r\n  animation-delay: 2600ms;\r\n}\r\n\r\n#samurai-kirby-controls {\r\n  background-color: var(--control-panel-bg-color);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: calc(var(--game-screen-height) * 0.1);\r\n  flex-grow: 1;\r\n  /* padding-top: calc(var(--game-screen-height) / 4); */\r\n  padding-top: var(--bottom-padding);\r\n  padding-bottom: var(--bottom-padding);\r\n}\r\n\r\n.fancy-button {\r\n  --draw-button-color: red;\r\n  position: relative;\r\n  border-radius: 50%;\r\n  background: transparent !important;\r\n  color: #ddd;\r\n  font-weight: bold;\r\n  border: 0;\r\n  filter: drop-shadow(0 4px black);\r\n  transition: background-color 200ms ease, all 100ms ease;\r\n}\r\n\r\n#samurai-kirby-button {\r\n  width: var(--samurai-kirby-button-width);\r\n  height: var(--samurai-kirby-button-height);\r\n  min-width: 55vw;\r\n  min-height: 55vw;\r\n  max-width: var(--samurai-kirby-button-width);\r\n  max-height: var(--samurai-kirby-button-height);\r\n  /* max-width: calc(var(--actual-height) / 4);\r\n  max-height: calc(var(--actual-height) / 4); */\r\n}\r\n\r\n.fancy-button:active::after {\r\n  margin-top: calc(var(--button-height) / 16);\r\n  -webkit-box-shadow:inset 0 1px 0 #FFE5C4;\r\n  -moz-box-shadow:inset 0 1px 0 #FFE5C4;\r\n  box-shadow:inset 0 1px 0 #FFE5C4;\r\n  transition: all 100ms ease;\r\n}\r\n\r\n.fancy-button::before {\r\n  content: '';\r\n  position: absolute;\r\n  width: inherit;\r\n  height: inherit;\r\n  min-width: inherit;\r\n  min-height: inherit;\r\n  max-width: inherit;\r\n  max-height: inherit;\r\n  top: 2.5%;\r\n  left: 0;\r\n  background-color: var(--draw-button-color);\r\n  filter: brightness(50%);\r\n  border-radius: inherit;\r\n}\r\n\r\n.fancy-button.receded {\r\n  opacity: 0;\r\n  scale: 0.8;\r\n  transition: none;\r\n}\r\n\r\n#samurai-kirby.waiting #samurai-kirby-button,\r\n#samurai-kirby.resetting #samurai-kirby-button,\r\n.fancy-button\r\n{\r\n  --draw-button-color: rgb(150, 82, 82);\r\n}\r\n\r\n.fancy-button::after {\r\n  content: '';\r\n  background-color: var(--draw-button-color);\r\n  width: inherit;\r\n  height: inherit;\r\n  min-width: inherit;\r\n  min-height: inherit;\r\n  max-width: inherit;\r\n  max-height: inherit;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: inherit;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  padding: 0 1rem;\r\n  box-sizing: border-box;\r\n  box-shadow: inset 0 1px 0 #ffe5c49c;\r\n  translate: -50% -50%;\r\n  transition: all 100ms ease;\r\n}\r\n\r\n#samurai-kirby.showing-instructions #samurai-kirby-button {\r\n  --draw-button-color: green;\r\n}\r\n#samurai-kirby.showing-instructions #samurai-kirby-button::after {\r\n  content: 'I\\'M READY';\r\n  font-size: calc(var(--button-height) / 2.75);\r\n}\r\n\r\n#samurai-kirby.time-up #samurai-kirby-button::after,\r\n#samurai-kirby.waiting #samurai-kirby-button::after,\r\n#samurai-kirby.resetting #samurai-kirby-button::after\r\n{\r\n  content: 'NOT YET';\r\n  font-size: calc(var(--button-height) / 3.5);\r\n}\r\n\r\n#samurai-kirby.called #samurai-kirby-button::after {\r\n  content: 'DRAW!';\r\n  font-size: calc(var(--button-height) / 2.5);\r\n}\r\n\r\n#samurai-kirby.time-up #samurai-kirby-button::after {\r\n  content: 'TOO SLOW';\r\n  font-size: calc(var(--button-height) / 3.5);\r\n}\r\n\r\n#samurai-kirby.showing-score #samurai-kirby-button::after {\r\n  content: 'TRY AGAIN';\r\n  font-size: calc(var(--button-height) / 3.5);\r\n}\r\n\r\n#samurai-kirby.kirby-attacking #samurai-kirby-button {\r\n  --draw-button-color: rgb(0, 184, 0);\r\n}\r\n\r\n#samurai-kirby.kirby-attacking #samurai-kirby-button::after {\r\n  content: 'KIRBY WINS';\r\n  font-size: calc(var(--button-height) / 2.5);\r\n}\r\n#samurai-kirby.kirby-attacking #samurai-kirby-button {\r\n  /* pointer-events: none; */\r\n}\r\n#samurai-kirby.called #samurai-kirby-button,\r\n#samurai-kirby.showing-score #samurai-kirby-button\r\n{\r\n  --draw-button-color: red;\r\n}\r\n\r\n#samurai-kirby.fouled #samurai-kirby-button::after {\r\n  content: 'FOUL!';\r\n  font-size: calc(var(--button-height) / 2.5);\r\n}\r\n#samurai-kirby.fouled #samurai-kirby-button {\r\n  --draw-button-color: rgb(83, 67, 67);\r\n}\r\n\r\n.start-button, #quit-button {\r\n  height: calc(var(--button-height) * 1);\r\n  font-size: calc(var(--button-height) / 3.5);\r\n  font-size: calc(var(--button-height) * 0.35);\r\n  font-weight: bold;\r\n  border-radius: calc(var(--button-height) * 0.325);\r\n}\r\n\r\n.start-button {\r\n  --start-button-color: green;\r\n  width: calc(var(--button-height) * 2.75);\r\n}\r\n\r\n#quit-button {\r\n  --quit-button-color: rgb(120, 120, 120);\r\n  width: calc(var(--game-screen-height) / 1.75);\r\n  height: calc(var(--button-height) * 0.8);\r\n  display: none;\r\n}\r\n\r\n#samurai-kirby.showing-score #quit-button {\r\n  display: block;\r\n}\r\n\r\n.start-button::before,\r\n#quit-button::before {\r\n  top: 5%;\r\n}\r\n\r\n.start-button::before {\r\n  background-color: var(--start-button-color);\r\n  filter: brightness(50%);\r\n}\r\n\r\n#quit-button::before {\r\n  background-color: var(--quit-button-color);\r\n  filter: brightness(50%);\r\n}\r\n\r\n.start-button::after, #quit-button::after {\r\n  text-shadow:\r\n    -1px 0 0 #222, \r\n    1px 0 0 #222,\r\n    0 -1px 0 #222,\r\n    0 1px 0 #222;\r\n}\r\n.start-button::after {\r\n  content: 'START GAME';\r\n  background-color: var(--start-button-color);\r\n}\r\n#quit-button::after {\r\n  content: 'QUIT';\r\n  background-color: var(--quit-button-color);\r\n}\r\n\r\n.fighter {\r\n  position: absolute;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  transform-origin: 80% 80%;\r\n  transition: translate 300ms ease, left 100ms ease, right 100ms ease, bottom 100ms ease;\r\n}\r\n\r\n#kirby {\r\n  width: calc(var(--game-screen-height) * 0.45);\r\n  height: calc(var(--game-screen-height) * 0.45);\r\n  left:  calc(var(--game-screen-height) * 0.03);\r\n  bottom:  calc(var(--game-screen-height) / 10);\r\n}\r\n\r\n#kirby::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 35%;\r\n  right: 20%;\r\n  --height: calc(var(--game-screen-height) * 0.1);\r\n  height: var(--height);\r\n  width: calc(var(--height) * (12/16));\r\n  background-image: url("+sn+");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  display: none;\r\n}\r\n\r\n#samurai-kirby.fouled #kirby::after {\r\n  display: block;\r\n  animation: drip 1000ms ease forwards;\r\n}\r\n\r\n#samurai-kirby.fouled #enemy {\r\n  animation: hop 300ms ease forwards;\r\n  animation-delay: 100ms;\r\n}\r\n\r\n#samurai-kirby.fouled #kirby {\r\n  animation: hop-left 300ms ease forwards;\r\n}\r\n\r\n#enemy {\r\n  height: calc(var(--game-screen-height) * 0.6);\r\n  width: calc((var(--game-screen-height) * 0.6) / (96/128));\r\n  left:  unset;\r\n  right: calc(var(--game-screen-height) / 18);\r\n  bottom:  calc(var(--game-screen-height) / 2.2);\r\n  display: none;\r\n}\r\n\r\n#kirby.bouncing {\r\n  animation: bounce-right 100ms ease alternate infinite forwards;\r\n}\r\n\r\n#enemy.bouncing {\r\n  animation: bounce-left 100ms ease alternate infinite forwards;\r\n}\r\n\r\nbody:not(.round-started) #kirby {\r\n  translate: calc(var(--game-screen-height) * -0.5) 0;\r\n}\r\n\r\nbody:not(.round-started) #enemy {\r\n  translate: 100% 0;\r\n}\r\n\r\n#samurai-kirby.kirby-attacking #enemy {\r\n  animation: fly-off-right 800ms linear forwards;\r\n  animation-delay: 200ms\r\n}\r\n\r\n#samurai-kirby.kirby-attacking #kirby {\r\n  left:  calc(var(--game-screen-height) * 0.25);\r\n  bottom:  calc(var(--game-screen-height) / 4.5);\r\n  transition-delay: 200ms;\r\n}\r\n\r\n#samurai-kirby.time-up #kirby {\r\n  animation: fly-off-left 400ms linear forwards;\r\n  animation-delay: 200ms\r\n}\r\n\r\n#samurai-kirby.time-up #enemy {\r\n  right: calc(var(--game-screen-height) / 6);\r\n  bottom:  calc(var(--game-screen-height) / 3.5);\r\n  transition-delay: 200ms;\r\n}\r\n\r\n#exclamation-point {\r\n  position: absolute;\r\n  background-image: url("+An+");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  width: calc(var(--game-screen-height) * 0.3125);\r\n  height: calc(var(--game-screen-height) * 0.3125);\r\n  left: 50%;\r\n  top: 50%;\r\n  translate: -50% -50%;\r\n  opacity: 0;\r\n  scale: 0.7;\r\n  transition: opacity 200ms ease, scale 200ms ease;\r\n  animation: flash 60ms linear infinite;\r\n}\r\n\r\n#samurai-kirby.called #exclamation-point {\r\n  opacity: 1;\r\n  scale: 1;\r\n}\r\n\r\n#score-post {\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: calc(var(--game-screen-height) / 40);\r\n  --height: calc(var(--game-screen-height) / 4);\r\n  height: var(--height);\r\n  width: calc(var(--height) * 1.5);\r\n  background-image: url("+cn+");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-right: 0.5%;\r\n  translate: 0 100%;\r\n  transition: translate 500ms ease;\r\n}\r\n\r\n#score-post > .score-numeral {\r\n  filter: unset;\r\n}\r\n\r\n#samurai-kirby.fouled #score-post::after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  translate: -50% -50%;\r\n  width: calc(var(--game-screen-height) * 0.15);\r\n  height: calc(var(--game-screen-height) * 0.15);\r\n  background-image: url("+ln+");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  rotate: -90deg;\r\n}\r\n\r\n#score-post.showing {\r\n  translate: none;\r\n}\r\n\r\n.score-numeral {\r\n  width: calc(var(--game-screen-height) * 0.05625);\r\n  height: calc(var(--game-screen-height) * 0.05625 * (16/9));\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: left;\r\n}\r\n\r\n.white {\r\n  filter: invert();\r\n}\r\n\r\n.green {\r\n  filter: invert() sepia(100%) hue-rotate(30deg) saturate(100);\r\n}\r\n\r\n.red {\r\n  filter: invert() sepia(100%) hue-rotate(289deg) saturate(220);\r\n}\r\n\r\n.brown {\r\n  filter: invert() sepia(100%) hue-rotate(313deg) saturate(280) brightness(0.25);\r\n}\r\n\r\n#player-score, #player-level {\r\n  position: absolute;\r\n  top: calc(var(--game-screen-height));\r\n  left: 0;\r\n  font-size: 1.5rem;\r\n  margin-left: 1rem;\r\n  color: white;\r\n  height: calc(var(--game-screen-height) / 6);\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n#player-score-display, #score-change-display, #player-level, #fastest-time-display {\r\n  display: flex;\r\n}\r\n\r\n#score-change-display {\r\n  position: absolute;\r\n  top: calc(var(--game-screen-height) / 12);\r\n  left: calc(100% + (var(--game-screen-height) / 30));\r\n  opacity: 0;\r\n  scale: 0.75;\r\n  translate: 0 -50%;\r\n  transform-origin: left;\r\n  transition: opacity 300ms ease;\r\n  z-index: 1;\r\n  /* display: none; */\r\n}\r\n\r\n#score-change-display.showing {\r\n  opacity: 1;\r\n  animation: slide-left 300ms ease forwards;\r\n}\r\n\r\n.player-status {\r\n  opacity: 0;\r\n  transition: opacity 300ms ease;\r\n}\r\n\r\nbody.round-started #samurai-kirby:not(.showing-score, .resetting) .player-status {\r\n  opacity: 1;\r\n}\r\n\r\n#player-level {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  left: unset;\r\n  right: 0;\r\n  margin-right: 1rem;\r\n  font-size: calc(var(--game-screen-height) / 16);\r\n}\r\n\r\n#lives-area {\r\n  position: absolute;\r\n  top: calc(var(--game-screen-height) / 60);\r\n  left: calc(var(--game-screen-height) / 60);\r\n  display: flex;\r\n  gap: calc(var(--game-screen-height) / 60);\r\n}\r\n\r\n#lives-area > .life-marker {\r\n  width: calc(var(--game-screen-height) * 0.1);\r\n  height: calc(var(--game-screen-height) * 0.1);\r\n  background-image: url("+ln+");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  opacity: 0.3;\r\n  transition: opacity 300ms ease;\r\n}\r\n\r\n#lives-area > .life-marker.filled {\r\n  opacity: 1\r\n}\r\n\r\n@keyframes flash {\r\n  from {\r\n    background-image: url("+An+");\r\n  }\r\n  to {\r\n    background-image: url("+dn+");\r\n  }\r\n}\r\n\r\n@keyframes blink {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes zoom-in {\r\n  from {\r\n    scale: 1;\r\n  }\r\n  to {\r\n    scale: 2;\r\n  }\r\n}\r\n\r\n@keyframes fly-off-right {\r\n  from {\r\n    translate: 0;\r\n    rotate: 0;\r\n    scale: 1;\r\n  }\r\n  50% {\r\n    translate: 5% -80%;\r\n    scale: 0.75;\r\n  }\r\n  to {\r\n    translate: -10% 0;\r\n    rotate: 430deg;\r\n    scale: 0.2;\r\n  }\r\n}\r\n\r\n@keyframes fly-off-left {\r\n  from {\r\n    translate: 0;\r\n    rotate: 0;\r\n    scale: 1;\r\n  }\r\n  50% {\r\n    translate: -25% -60%;\r\n    scale: 1.05;\r\n  }\r\n  to {\r\n    translate: -50% -30%;\r\n    rotate: -180deg;\r\n    scale: 1.1;\r\n  }\r\n}\r\n\r\n@keyframes drip {\r\n  from {\r\n    translate: 0 0;\r\n  }\r\n  to {\r\n    translate: 0 calc(var(--game-screen-height) * 0.08);\r\n  }\r\n}\r\n\r\n@keyframes hop {\r\n  from {\r\n    translate: 0 0;\r\n  }\r\n  50% {\r\n    translate: 0 calc(var(--game-screen-height) * -0.05);\r\n  }\r\n  to {\r\n    translate: 0 0;\r\n  }\r\n}\r\n\r\n@keyframes hop-left {\r\n  from {\r\n    translate: 0 0;\r\n    rotate: 0deg\r\n  }\r\n  50% {\r\n    translate: calc(var(--game-screen-height) * -0.05) calc(var(--game-screen-height) * -0.05);\r\n  }\r\n  65% {\r\n    rotate: -9deg\r\n  }\r\n  to {\r\n    translate: 0 0;\r\n    rotate: 0deg\r\n  }\r\n}\r\n\r\n@keyframes slide-left {\r\n  from {\r\n    translate: calc(var(--game-screen-height) / 12) -50%;\r\n  }\r\n  to {\r\n    translate: 0 -50%;\r\n  }\r\n}\r\n\r\n@keyframes zoom-fade-in {\r\n  from {\r\n    opacity: 0;\r\n    scale: 0.8;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    scale: 1;\r\n  }\r\n}\r\n\r\n@keyframes bounce-left {\r\n  from {\r\n    margin-right: 0;\r\n  }\r\n  to {\r\n    margin-right: calc(var(--game-screen-height) / 80);\r\n  }\r\n}\r\n\r\n@keyframes bounce-right {\r\n  from {\r\n    margin-left: 0;\r\n  }\r\n  to {\r\n    margin-left: calc(var(--game-screen-height) / 80);\r\n  }\r\n}\r\n\r\n@keyframes blink-border-image {\r\n  from {\r\n    border-image-outset: calc(var(--button-height) * 0.1) calc(var(--button-height) * 0.1);\r\n  }\r\n  to {\r\n    border-image-outset: calc(var(--button-height) * 0.18) calc(var(--button-height) * 0.2);\r\n  }\r\n}\r\n\r\n@keyframes land {\r\n  from {\r\n    opacity: 0;\r\n    scale: 1.2\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    scale: 1\r\n  }\r\n}\r\n\r\n.loading-bar {\r\n  position: fixed;\r\n  left: 50%;\r\n  bottom: calc(var(--controls-height) * 0.08);\r\n  width: calc(var(--button-height) * 3);\r\n  height: calc(var(--controls-height) * 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #ffffff33;\r\n  border: calc(var(--button-height) / 48) solid #ffffff99;\r\n  transform-origin: left center;\r\n  translate: -50% 0;\r\n  pointer-events: none;\r\n}\r\n\r\n.loading-bar > .label {\r\n  color: var(--control-panel-bg-color);\r\n  font-size: calc(var(--button-height) * 0.175);\r\n  z-index: 1;\r\n}\r\n\r\n.loading-bar > .filler {\r\n  position: absolute;\r\n  transform-origin: inherit;\r\n  width: inherit;\r\n  height: inherit;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(255, 255, 255, 0.293);\r\n  scale: 1% 1;\r\n  transition: scale 200ms ease;\r\n}\r\n\r\n.loading-bar > .details {\r\n  font-size: 70%;\r\n  color: #aaa;\r\n  position: absolute;\r\n  height: inherit;\r\n  text-align: center;\r\n  translate: 0 125%;\r\n}\r\n\r\n#kotd-instructions-screen {\r\n  pointer-events: none;\r\n}\r\n\r\n#kotd-screen, #kotd-instructions-screen {\r\n  width: var(--ds-screen-width);\r\n  height: calc(var(--ds-screen-height) * 2);\r\n  z-index: 1;\r\n}\r\n\r\n.top-screen, .bottom-screen {\r\n  position: relative;\r\n  width: var(--ds-screen-width);\r\n  height: var(--ds-screen-height);\r\n}\r\n\r\n.top-screen, .bottom-screen {\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\n#kotd-instructions-screen > .top-screen {\r\n  background-image: url("+un+");\r\n}\r\n#kotd-instructions-screen > .bottom-screen {\r\n  background-image: url("+gn+");\r\n}\r\n#kotd-screen > .top-screen {\r\n  background-image: url("+hn+");\r\n}\r\n#kotd-screen > .bottom-screen {\r\n  background-image: url("+mn+");\r\n}\r\n#kotd-screen > .bottom-screen > #lower-indoor-bg {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: var(--ds-screen-width);\r\n  height: calc(var(--ds-screen-height) / 3);\r\n  background-image: url("+pn+");\r\n  background-repeat: no-repeat;\r\n  background-size: auto 100%;\r\n}\r\n\r\n#kotd-score-bar, #kotd-score-bar > div {\r\n  height: calc(var(--ds-screen-height) / 6);\r\n  background-size: auto 100%;\r\n  background-repeat: repeat-x;\r\n}\r\n\r\n#kotd-score-bar {\r\n  position: absolute;\r\n  width: var(--ds-screen-width);\r\n  display: flex;\r\n  bottom: 0;\r\n  z-index: 3;\r\n}\r\n#kotd-ammo-bar {\r\n  flex-grow: 1;\r\n  display: flex;\r\n}\r\n.ammo-slot {\r\n  height: inherit;\r\n  width: calc(var(--ds-screen-height) / 8);\r\n  background-image: url("+Cn+");\r\n  background-repeat: no-repeat;\r\n  background-size: auto 100%;\r\n  background-position-x: calc(var(--ds-screen-height) / -8);\r\n}\r\n.ammo-slot.empty {\r\n  background-position-x: 0;\r\n}\r\n#kotd-score-area {\r\n  width: calc(var(--ds-screen-height) / 3);\r\n  background-image: url("+bn+");\r\n  \r\n}\r\n#kotd-score-end {\r\n  width: calc(var(--ds-screen-height) / 24);\r\n  background-image: url("+fn+');\r\n}\r\n\r\n#kotd-controls {\r\n  position: fixed;\r\n  background-color: rgb(82, 53, 42);\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  min-height: calc(var(--actual-height) - (var(--ds-screen-height) * 2));\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 2;\r\n}\r\n\r\n#kotd-button::after {\r\n  background-color: green;\r\n  content: "GOT IT";\r\n}\r\n\r\n#kotd-button {\r\n  transition: all 300ms ease !important;\r\n}\r\n#kotd-button.invisible {\r\n  opacity: 0;\r\n  pointer-events: none;\r\n}\r\n#kotd-kirby-area {\r\n  width: var(--ds-screen-width);\r\n  position: absolute;\r\n  bottom: calc(var(--ds-screen-height) / 3.25);\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n}\r\n.kotd-kirby {\r\n  --kotd-kirby-height: calc(var(--ds-screen-height) / 3.428);\r\n  --spacing-x: calc(var(--ds-screen-height) / -3.428);\r\n  height: var(--kotd-kirby-height);\r\n  width: var(--kotd-kirby-height);\r\n  background-image: url('+En+");\r\n  background-repeat: no-repeat;\r\n  background-size: auto 100%;\r\n}\r\n\r\n.kotd-kirby.player {\r\n  background-position-x: 0;\r\n}\r\n.kotd-kirby.player.firing {\r\n  background-position-x: calc(var(--spacing-x) * 1);\r\n}\r\n.kotd-kirby.player.fired {\r\n  background-position-x: calc(var(--spacing-x) * 2);\r\n}\r\n.kotd-kirby.yellow {\r\n  background-position-x: calc(var(--spacing-x) * 3);\r\n}\r\n.kotd-kirby.pink {\r\n  background-position-x: calc(var(--spacing-x) * 6);\r\n}\r\n.kotd-kirby.lime {\r\n  background-position-x: calc(var(--spacing-x) * 9);\r\n}\r\n\r\n.enemy-container {\r\n  position: absolute;\r\n  transform-origin: 50% 175%;\r\n  transition: opacity 500ms ease, translate 600ms ease;\r\n}\r\n\r\n.enemy-container.bottom-edge {\r\n  bottom: calc(var(--ds-screen-height) / 2.5 * 0.5)\r\n}\r\n.enemy-container.bottom-edge.obscured {\r\n  translate: 0 100%;\r\n}\r\n.enemy-container.bottom-edge.dead {\r\n  animation: spin 80ms linear alternate infinite;\r\n  translate: 0 150%;\r\n}\r\n.enemy-container > .pole {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  bottom: 0;\r\n  translate: -50% 0;\r\n\r\n  background-image: url("+yn+");\r\n  background-repeat: repeat-y;\r\n  width: calc(var(--ds-screen-height) / 21.333);\r\n  height: calc(var(--ds-screen-height) / 2.5);\r\n  pointer-events: none;\r\n  /* z-index: 0; */\r\n}\r\n\r\n.enemy-container.bottom-edge {\r\n  bottom: calc(var(--ds-screen-height) / 2.5 * 0.5)\r\n}\r\n\r\n.kotd-enemy {\r\n  position: relative;\r\n  --kotd-enemy-height: calc(var(--ds-screen-height) / 3);\r\n  --spacing-x: calc(var(--ds-screen-height) / -3);\r\n  height: var(--kotd-enemy-height);\r\n  width: var(--kotd-enemy-height);\r\n  background-image: url("+vn+");\r\n  background-repeat: no-repeat;\r\n  background-size: auto 100%;\r\n}\r\n\r\n.kotd-enemy.waddledee {\r\n  background-position-x: 0;\r\n}\r\n.kotd-enemy.cappy {\r\n  background-position-x: calc(var(--spacing-x) * 1);\r\n}\r\n.kotd-enemy.brontoburt {\r\n  background-position-x: calc(var(--spacing-x) * 2);\r\n}\r\n.kotd-enemy.knucklejoe {\r\n  background-position-x: calc(var(--spacing-x) * 3);\r\n}\r\n.kotd-enemy.waddledoo {\r\n  background-position-x: calc(var(--spacing-x) * 4);\r\n}\r\n.kotd-enemy.chefkawasaki {\r\n  background-position-x: calc(var(--spacing-x) * 5);\r\n}\r\n.kotd-enemy.bonkers {\r\n  background-position-x: calc(var(--spacing-x) * 6);\r\n}\r\n.kotd-enemy.dedede {\r\n  background-position-x: calc(var(--spacing-x) * 7);\r\n}\r\n.kotd-enemy.metaknight {\r\n  background-position-x: calc(var(--spacing-x) * 8);\r\n}\r\n\r\n@keyframes wobble {\r\n  from {\r\n    rotate: -15deg;\r\n  }\r\n  to {\r\n    rotate: 15deg;\r\n  }\r\n}\r\n@keyframes spin {\r\n  from {\r\n    scale: 1 1;\r\n  }\r\n  to {\r\n    scale: 0 1;\r\n  }\r\n}\r\n","",{version:3,sources:["webpack://./src/css/style.css"],names:[],mappings:"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AQ;EACV;EACA;IACE,QAAQ;EACV;AACF;;AAEA;EACE;IACE,YAAY;IACZ,SAAS;IACT,QAAQ;EACV;EACA;IACE,kBAAkB;IAClB,WAAW;EACb;EACA;IACE,iBAAiB;IACjB,cAAc;IACd,UAAU;EACZ;AACF;;AAEA;EACE;IACE,YAAY;IACZ,SAAS;IACT,QAAQ;EACV;EACA;IACE,oBAAoB;IACpB,WAAW;EACb;EACA;IACE,oBAAoB;IACpB,eAAe;IACf,UAAU;EACZ;AACF;;AAEA;EACE;IACE,cAAc;EAChB;EACA;IACE,mDAAmD;EACrD;AACF;;AAEA;EACE;IACE,cAAc;EAChB;EACA;IACE,oDAAoD;EACtD;EACA;IACE,cAAc;EAChB;AACF;;AAEA;EACE;IACE,cAAc;IACd;EACF;EACA;IACE,0FAA0F;EAC5F;EACA;IACE;EACF;EACA;IACE,cAAc;IACd;EACF;AACF;;AAEA;EACE;IACE,oDAAoD;EACtD;EACA;IACE,iBAAiB;EACnB;AACF;;AAEA;EACE;IACE,UAAU;IACV,UAAU;EACZ;EACA;IACE,UAAU;IACV,QAAQ;EACV;AACF;;AAEA;EACE;IACE,eAAe;EACjB;EACA;IACE,kDAAkD;EACpD;AACF;;AAEA;EACE;IACE,cAAc;EAChB;EACA;IACE,iDAAiD;EACnD;AACF;;AAEA;EACE;IACE,sFAAsF;EACxF;EACA;IACE,uFAAuF;EACzF;AACF;;AAEA;EACE;IACE,UAAU;IACV;EACF;EACA;IACE,UAAU;IACV;EACF;AACF;;AAEA;EACE,eAAe;EACf,SAAS;EACT,2CAA2C;EAC3C,qCAAqC;EACrC,0CAA0C;EAC1C,aAAa;EACb,mBAAmB;EACnB,uBAAuB;EACvB,2BAA2B;EAC3B,uDAAuD;EACvD,6BAA6B;EAC7B,iBAAiB;EACjB,oBAAoB;AACtB;;AAEA;EACE,oCAAoC;EACpC,6CAA6C;EAC7C,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,yBAAyB;EACzB,cAAc;EACd,eAAe;EACf,OAAO;EACP,MAAM;EACN,4CAA4C;EAC5C,WAAW;EACX,4BAA4B;AAC9B;;AAEA;EACE,cAAc;EACd,WAAW;EACX,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,iBAAiB;AACnB;;AAEA;EACE,oBAAoB;AACtB;;AAEA;EACE,6BAA6B;EAC7B,yCAAyC;EACzC,UAAU;AACZ;;AAEA;EACE,kBAAkB;EAClB,6BAA6B;EAC7B,+BAA+B;AACjC;;AAEA;EACE,4BAA4B;EAC5B,sBAAsB;AACxB;;AAEA;EACE,0DAAkE;AACpE;AACA;EACE,0DAAmE;AACrE;AACA;EACE,0DAAwD;AAC1D;AACA;EACE,0DAA2D;AAC7D;AACA;EACE,kBAAkB;EAClB,SAAS;EACT,6BAA6B;EAC7B,yCAAyC;EACzC,0DAAgE;EAChE,4BAA4B;EAC5B,0BAA0B;AAC5B;;AAEA;EACE,yCAAyC;EACzC,0BAA0B;EAC1B,2BAA2B;AAC7B;;AAEA;EACE,kBAAkB;EAClB,6BAA6B;EAC7B,aAAa;EACb,SAAS;EACT,UAAU;AACZ;AACA;EACE,YAAY;EACZ,aAAa;AACf;AACA;EACE,eAAe;EACf,wCAAwC;EACxC,0DAA2D;EAC3D,4BAA4B;EAC5B,0BAA0B;EAC1B,yDAAyD;AAC3D;AACA;EACE,wBAAwB;AAC1B;AACA;EACE,wCAAwC;EACxC,0DAAmE;;AAErE;AACA;EACE,yCAAyC;EACzC,0DAAoE;AACtE;;AAEA;EACE,eAAe;EACf,iCAAiC;EACjC,SAAS;EACT,OAAO;EACP,WAAW;EACX,sEAAsE;EACtE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;EACnB,uBAAuB;EACvB,UAAU;AACZ;;AAEA;EACE,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,qCAAqC;AACvC;AACA;EACE,UAAU;EACV,oBAAoB;AACtB;AACA;EACE,6BAA6B;EAC7B,kBAAkB;EAClB,4CAA4C;EAC5C,aAAa;EACb,6BAA6B;;AAE/B;AACA;EACE,0DAA0D;EAC1D,mDAAmD;EACnD,gCAAgC;EAChC,+BAA+B;EAC/B,0DAAiE;EACjE,4BAA4B;EAC5B,0BAA0B;AAC5B;;AAEA;EACE,wBAAwB;AAC1B;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;;AAEA;EACE,kBAAkB;EAClB,0BAA0B;EAC1B,oDAAoD;AACtD;;AAEA;EACE;AACF;AACA;EACE,iBAAiB;AACnB;AACA;EACE,8CAA8C;EAC9C,iBAAiB;AACnB;AACA;EACE,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,SAAS;EACT,iBAAiB;;EAEjB,0DAA2D;EAC3D,2BAA2B;EAC3B,6CAA6C;EAC7C,2CAA2C;EAC3C,oBAAoB;EACpB,gBAAgB;AAClB;;AAEA;EACE;AACF;;AAEA;EACE,kBAAkB;EAClB,sDAAsD;EACtD,+CAA+C;EAC/C,gCAAgC;EAChC,+BAA+B;EAC/B,0DAAiE;EACjE,4BAA4B;EAC5B,0BAA0B;AAC5B;;AAEA;EACE,wBAAwB;AAC1B;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;AACA;EACE,iDAAiD;AACnD;;AAEA;EACE;IACE,cAAc;EAChB;EACA;IACE,aAAa;EACf;AACF;AACA;EACE;IACE,UAAU;EACZ;EACA;IACE,UAAU;EACZ;AACF",sourcesContent:[":root {\r\n  --actual-height: 100vh;\r\n  --screen-aspect-ratio: (8/7);\r\n  --game-screen-width: 100vw;\r\n  --game-screen-height: calc(var(--game-screen-width) / var(--screen-aspect-ratio));\r\n  --ds-aspect-ratio: (4/3);\r\n  --ds-screen-width: 100vw;\r\n  --ds-screen-height: calc(var(--ds-screen-width) / var(--ds-aspect-ratio));\r\n  --controls-height: calc(var(--actual-height) - var(--game-screen-height));\r\n  --bottom-padding: calc(var(--controls-height) / 6);\r\n  --samurai-kirby-button-width: calc(var(--controls-height) / 2.25);\r\n  --samurai-kirby-button-height: calc(var(--controls-height) / 2.25);\r\n  --button-height: calc(var(--actual-height) / 8);\r\n  --control-panel-bg-color: #586838;\r\n  --level-select-bg-color: #393939;\r\n}\r\n\r\n@font-face {\r\n  font-family: kirbyFont;\r\n  src: url(../media/Connection.otf);\r\n}\r\n\r\n*, * *, * * * {\r\n  box-sizing: border-box;\r\n  margin: 0;\r\n}\r\n\r\n.display-none {\r\n  display: none !important;\r\n}\r\n\r\nbody {\r\n  font-family: kirbyFont;\r\n  image-rendering: pixelated;\r\n  width: 100%;\r\n  height: var(--actual-height);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: stretch;\r\n  justify-content: space-between;\r\n  user-select: none;\r\n  overflow: hidden;\r\n}\r\n\r\nbutton {\r\n  font-family: inherit;\r\n  text-shadow: inherit;\r\n  padding-top: calc(var(--button-height) / 10);\r\n}\r\n\r\nbutton::after {\r\n  pointer-events: none;\r\n}\r\n\r\nbutton, .game-selection {\r\n  cursor: pointer;\r\n  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);\r\n}\r\n\r\n.hidden {\r\n  transition: none !important;\r\n  opacity: 0 !important;\r\n  pointer-events: none !important;\r\n  display: none !important;\r\n}\r\n\r\n#sound-controls {\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: calc(var(--controls-height) / 7);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  gap: 5%;\r\n  padding: 0 10%;\r\n  z-index: 4;\r\n}\r\n\r\n#game-select-screen.hidden + * + * + #sound-controls{\r\n  display: none;\r\n}\r\n\r\n#sound-controls > input {\r\n  flex-grow: 1;\r\n}\r\n\r\n#sound-controls > .icon {\r\n  width: calc(var(--controls-height) / 16);\r\n  height: calc(var(--controls-height) / 16);\r\n}\r\n\r\n#sound-controls > #mute-icon {\r\n  content: url(\"svg/volume-mute-icon.svg\");\r\n}\r\n#sound-controls > #full-icon {\r\n  content: url(\"svg/volume-icon.svg\");  \r\n}\r\n\r\n#game-select-screen {\r\n  background-color: #aaa;\r\n  height: 100%;\r\n  display: grid;\r\n  grid-template-rows: 1fr calc(var(--button-height) * 2);\r\n  grid-template-columns: 1fr;\r\n  transition: opacity 300ms ease;\r\n  z-index: 2;\r\n}\r\n\r\n#game-list {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  gap: calc(var(--button-height) * 0.15);\r\n  padding: calc(var(--button-height) * 0.5) 0;\r\n}\r\n\r\n.game-selection, .game-selection::after {\r\n  height: var(--button-height);\r\n  width: 80%;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n\r\n.button-area {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: flex-end;\r\n  padding-bottom: var(--bottom-padding);\r\n}\r\n\r\n.game-selection::after {\r\n  content: '';\r\n  height: var(--button-height);\r\n  position: absolute;\r\n  border-image-source: url(\"../media/samurai-kirby/images/ui/qdborder.png\");\r\n  border-image-slice: 33.3% 33.3% 33.3% 33.3%;\r\n  border-image-repeat: stretch stretch;\r\n  border-style: solid;\r\n  border-image-width: 0;\r\n}\r\n\r\n#samurai-kirby .logo,\r\n.game-selection .logo {\r\n  --button-logo-height: calc(var(--button-height) * 0.65);\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n  height: var(--button-logo-height);\r\n  width: calc(var(--button-logo-height) * (205/50));\r\n  pointer-events: none;\r\n}\r\n\r\n#samurai-kirby-selection {\r\n  height: calc(var(--button-height) * 1.25);\r\n}\r\n#samurai-kirby-selection > .logo {\r\n  background-image: url(\"../media/samurai-kirby/images/ui/sklogo.png\");\r\n}\r\n\r\n#bomb-rally-selection > .logo {\r\n  background-image: url(\"../media/bombrally/images/ui/brlogo.png\");\r\n}\r\n\r\n#kotd-selection {\r\n  margin: calc(var(--button-height) / 12) 0;\r\n}\r\n\r\n#kotd-selection > .logo {\r\n  --button-logo-height: calc(var(--button-height) * 1.1);\r\n  background-image: url(\"../media/kotd/images/ui/kotdlogo.png\");\r\n  width: calc(var(--button-logo-height) * (235/90));\r\n}\r\n\r\n.game-selection.selected::after {\r\n  border-image-width: calc(var(--button-height) * 0.3);\r\n  animation: blink-border-image 300ms ease-in-out infinite alternate;\r\n}\r\n\r\n.game-container {\r\n  position: absolute;\r\n  z-index: 0;\r\n}\r\n\r\n#samurai-kirby {\r\n  /* font-weight: bold; */\r\n  color: #402a00;\r\n  text-shadow:\r\n    -1px 0 0 #222, \r\n    1px 0 0 #222,\r\n    0 -1px 0 #222,\r\n    0 1px 0 #222\r\n  ;\r\n  letter-spacing: 1px;\r\n  width: 100vw;\r\n  flex-grow: 1;\r\n  display: flex;\r\n  flex-direction: column;\r\n  transition: opacity 300ms ease;\r\n}\r\n\r\n.game-instructions-screen {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: var(--game-screen-width);\r\n  height: var(--game-screen-height);\r\n  background-color: #dbdbdb;\r\n  color: #586058;\r\n  text-shadow: none;\r\n  font-weight: bold;\r\n  z-index: 3;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  opacity: 0;\r\n}\r\n\r\n#samurai-kirby-instructions {\r\n  background-image: url(../media/samurai-kirby/images/ui/quickdrawinstructions.png);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  --width: calc(var(--game-screen-width) * 0.9);\r\n  width: var(--width);\r\n  height: calc(var(--width) / (240/90));\r\n}\r\n\r\n#samurai-kirby #level-bar-highlight, \r\n#samurai-kirby #level-bar {\r\n  position: absolute;\r\n  background-image: url(../media/samurai-kirby/images/ui/levelbar.png);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: center;\r\n  left: 0;\r\n  bottom: 0;\r\n  width: var(--game-screen-width);\r\n  height: calc(var(--game-screen-width) / 6.55);\r\n  display: flex;\r\n}\r\n#samurai-kirby #level-bar-highlight {\r\n  background-image: none;\r\n  background-color: rgb(82, 249, 82);\r\n  width: 33.3%;\r\n  height: 85%;\r\n  z-index: -1;\r\n  scale: 0.65 1;\r\n  transition: translate 200ms linear;\r\n}\r\n#samurai-kirby #level-bar-highlight.position-1 {\r\n  translate: 0 0;\r\n}\r\n#samurai-kirby #level-bar-highlight.position-2 {\r\n  translate: calc(var(--game-screen-width) / 3) 0;\r\n}\r\n#samurai-kirby #level-bar-highlight.position-3 {\r\n  translate: calc((var(--game-screen-width) / 3) * 2) 0;\r\n}\r\n\r\n#samurai-kirby #level-bar > .level-segment {\r\n  display: flex;\r\n  align-items: flex-end;\r\n  justify-content: center;\r\n  width: 33.3%;\r\n  padding-bottom: calc(var(--button-height) * 0.0325);\r\n}\r\n\r\n#samurai-kirby #level-bar .star {\r\n  /* position: absolute; */\r\n  background-image: url(../media/samurai-kirby/images/ui/star.png);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  width: calc(var(--game-screen-height) / 20);\r\n  height: calc(var(--game-screen-height) / 20);\r\n  opacity: 0.5;\r\n}\r\n\r\n#samurai-kirby #level-bar .star.filled {\r\n  opacity: 1;\r\n}\r\n\r\n#button-name {\r\n  position: absolute;\r\n  font-size: calc(var(--game-screen-height) / 18);\r\n  width: calc(var(--game-screen-height / 12));\r\n  right: calc(var(--game-screen-height) / 3.25);\r\n  top: calc(var(--game-screen-height) * 0.72);\r\n  transform-origin: center;\r\n  translate: 50% 0;\r\n}\r\n\r\n#samurai-kirby-instructions-screen .logo {\r\n  border-image: none;\r\n  border-width: 0;\r\n  transform-origin: center;\r\n  transition: all 800ms ease !important;\r\n  /* transition-delay: 3000ms; */\r\n}\r\n\r\n#samurai-kirby-instructions-screen .samurai-kirby-logo,\r\n#samurai-kirby-selection .samurai-kirby-logo {\r\n  --button-logo-height: calc(var(--button-height) * 1.35);\r\n  height: var(--button-logo-height);\r\n  width: calc(var(--button-logo-height) / 0.583);\r\n}\r\n\r\n.showing-instructions .game-instructions-screen {\r\n  opacity: 1;\r\n}\r\n\r\n#samurai-kirby .samurai-kirby-logo-right {\r\n  position: absolute;\r\n  background-image: url(\"../media/samurai-kirby/images/ui/sklogoright.png\");\r\n  opacity: 0;\r\n  translate: 100% 0;\r\n}\r\n#samurai-kirby .samurai-kirby-logo-left {\r\n  background-image: url(\"../media/samurai-kirby/images/ui/sklogoleft.png\");\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  background-position: center;\r\n  opacity: 0;\r\n  translate: -100% 0;\r\n  transition-delay: 3000ms;\r\n\r\n}\r\n#samurai-kirby.showing-instructions .samurai-kirby-logo-right,\r\n#samurai-kirby.showing-instructions .samurai-kirby-logo-left {\r\n  translate: 0 0;\r\n  opacity: 1;\r\n  /* animation: land 600ms ease forwards; */\r\n}\r\n\r\n#samurai-kirby.resetting *:not(.player-status, .veil) {\r\n  transition-duration: 0ms !important;\r\n}\r\n\r\n#samurai-kirby-screen {\r\n  position: relative;\r\n  width: var(--game-screen-width);\r\n  height: var(--game-screen-height);\r\n  background-image: url(../media/samurai-kirby/images/ui/quickdrawbg.png);\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: top center;\r\n  overflow: hidden;\r\n}\r\n\r\n#samurai-kirby-screen > .veil {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: var(--game-screen-width);\r\n  height: var(--game-screen-height);\r\n  background-color: white;\r\n  opacity: 0;\r\n  transition: opacity 600ms ease;\r\n  z-index: 2;\r\n}\r\n#samurai-kirby-screen > .veil.showing {\r\n  opacity: 1;\r\n}\r\n#slash-screen, #score-screen {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n  width: var(--game-screen-width);\r\n  height: var(--game-screen-height);\r\n  background-color: #000000;\r\n  z-index: 1;\r\n  display: none;\r\n}\r\n.slash-mark {\r\n  position: absolute;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  transform-origin: center;\r\n  left: 50%;\r\n  top: 50%;\r\n  translate: -50% -50%;\r\n  display: none;\r\n}\r\n.slash-mark.showing {\r\n  display: block;\r\n}\r\n.slash-mark::after {\r\n  content: '';\r\n  position: absolute;\r\n  width: inherit;\r\n  height: inherit;\r\n  background-color: #000000;\r\n  /* opacity: 0.5; */\r\n  transform-origin: right;\r\n  transform: scaleX(1);\r\n  transition: transform 80ms linear !important;\r\n}\r\n.slash-mark.revealing::after {\r\n  transform: scaleX(0);\r\n}\r\n.slash-mark:first-child {\r\n  --height: calc(var(--game-screen-height) * 0.6);\r\n  height: var(--height);\r\n  width: calc(var(--height) * (180/96));\r\n  background-image: url(../media/samurai-kirby/images/ui/slashmark1.png);\r\n}\r\n#center-slash {\r\n  --height: calc(var(--game-screen-height) * 0.2);\r\n  height: var(--height);\r\n  width: calc(var(--height) * (54/32));\r\n  background-image: url(../media/samurai-kirby/images/ui/slashcenter.png);\r\n  animation: blink 2ms linear infinite, zoom-in 200ms ease forwards;\r\n}\r\n#center-slash::after {\r\n  display: none;\r\n}\r\n.slash-mark:last-child {\r\n  --height: calc(var(--game-screen-height) * 0.9);\r\n  height: var(--height);\r\n  width: calc(var(--height) / (144/65));\r\n  background-image: url(../media/samurai-kirby/images/ui/slashmark2.png);\r\n}\r\n\r\n#score-screen {\r\n  background-color: transparent;\r\n  font-size: calc(var(--game-screen-height) * 0.08);\r\n  display: grid;\r\n  grid-template-rows: \r\n    calc(var(--game-screen-height) / 8) \r\n    auto\r\n    1fr\r\n    1fr\r\n  ;\r\n  grid-template-columns: 1fr;\r\n  justify-items: center;\r\n  opacity: 0;\r\n  z-index: 1;\r\n  height: var(--game-screen-height);\r\n}\r\n\r\n#samurai-kirby.showing-score #score-screen {\r\n  opacity: 1;\r\n}\r\n\r\n#enemies-defeated, #fastest-time {\r\n  display: flex;\r\n  gap: calc(var(--game-screen-height) / 30);\r\n  align-items: center;\r\n\r\n  align-items: baseline;\r\n  align-self: center;\r\n}\r\n\r\n#enemies-defeated > span:last-child, \r\n#fastest-time > span:last-child {\r\n  translate: 0 25%;\r\n}\r\n\r\n#enemies-defeated {\r\n  padding-top: calc(var(--game-screen-height) * 0.07);\r\n}\r\n\r\n#fastest-time {\r\n  align-self: stretch;\r\n}\r\n\r\n#score-kirby {\r\n  position: relative;\r\n  width: calc(var(--game-screen-height) * 0.45);\r\n  height: calc(var(--game-screen-height) * 0.45);\r\n  translate: -17% 3%;\r\n  background-image: url(../media/samurai-kirby/images/samuraikirby/waiting.png);\r\n}\r\n\r\n#total-score {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  align-self: flex-end;\r\n  font-size: calc(var(--game-screen-height) * 0.06);\r\n  gap: calc(var(--game-screen-height) * 0.01);\r\n  padding: calc(var(--game-screen-height) * 0.04) 0;\r\n}\r\n\r\n.score-numeral \r\n{\r\n  filter: \r\n    drop-shadow(2px 0px rgb(255, 255, 255))\r\n    drop-shadow(-1px 0px rgb(255, 255, 255))\r\n    drop-shadow(0px -1px rgb(255, 255, 255))\r\n    drop-shadow(0px 2px rgb(255, 255, 255))\r\n  ;\r\n}\r\n\r\n.score-screen-display {\r\n  opacity: 0;\r\n  scale: 0.8;\r\n}\r\n#total-score-display {\r\n  display: flex;\r\n  align-items: center;\r\n  transform-origin: center;\r\n  opacity: 0;\r\n  scale: 0.8;\r\n}\r\n\r\n#total-score-display > .score-numeral {\r\n  width: calc(var(--game-screen-height) * 0.07);\r\n  height: calc(var(--game-screen-height) * 0.07 * (16/9));\r\n}\r\n\r\n#samurai-kirby.showing-score .score-screen-display {\r\n  animation: zoom-fade-in 1000ms ease forwards;\r\n}\r\n#samurai-kirby.showing-score #enemy-count-display {\r\n  animation-delay: 1000ms;\r\n}\r\n#samurai-kirby.showing-score #fastest-time-display {\r\n  animation-delay: 1800ms;\r\n}\r\n#samurai-kirby.showing-score #total-score-display {\r\n  animation-delay: 2600ms;\r\n}\r\n\r\n#samurai-kirby-controls {\r\n  background-color: var(--control-panel-bg-color);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  gap: calc(var(--game-screen-height) * 0.1);\r\n  flex-grow: 1;\r\n  /* padding-top: calc(var(--game-screen-height) / 4); */\r\n  padding-top: var(--bottom-padding);\r\n  padding-bottom: var(--bottom-padding);\r\n}\r\n\r\n.fancy-button {\r\n  --draw-button-color: red;\r\n  position: relative;\r\n  border-radius: 50%;\r\n  background: transparent !important;\r\n  color: #ddd;\r\n  font-weight: bold;\r\n  border: 0;\r\n  filter: drop-shadow(0 4px black);\r\n  transition: background-color 200ms ease, all 100ms ease;\r\n}\r\n\r\n#samurai-kirby-button {\r\n  width: var(--samurai-kirby-button-width);\r\n  height: var(--samurai-kirby-button-height);\r\n  min-width: 55vw;\r\n  min-height: 55vw;\r\n  max-width: var(--samurai-kirby-button-width);\r\n  max-height: var(--samurai-kirby-button-height);\r\n  /* max-width: calc(var(--actual-height) / 4);\r\n  max-height: calc(var(--actual-height) / 4); */\r\n}\r\n\r\n.fancy-button:active::after {\r\n  margin-top: calc(var(--button-height) / 16);\r\n  -webkit-box-shadow:inset 0 1px 0 #FFE5C4;\r\n  -moz-box-shadow:inset 0 1px 0 #FFE5C4;\r\n  box-shadow:inset 0 1px 0 #FFE5C4;\r\n  transition: all 100ms ease;\r\n}\r\n\r\n.fancy-button::before {\r\n  content: '';\r\n  position: absolute;\r\n  width: inherit;\r\n  height: inherit;\r\n  min-width: inherit;\r\n  min-height: inherit;\r\n  max-width: inherit;\r\n  max-height: inherit;\r\n  top: 2.5%;\r\n  left: 0;\r\n  background-color: var(--draw-button-color);\r\n  filter: brightness(50%);\r\n  border-radius: inherit;\r\n}\r\n\r\n.fancy-button.receded {\r\n  opacity: 0;\r\n  scale: 0.8;\r\n  transition: none;\r\n}\r\n\r\n#samurai-kirby.waiting #samurai-kirby-button,\r\n#samurai-kirby.resetting #samurai-kirby-button,\r\n.fancy-button\r\n{\r\n  --draw-button-color: rgb(150, 82, 82);\r\n}\r\n\r\n.fancy-button::after {\r\n  content: '';\r\n  background-color: var(--draw-button-color);\r\n  width: inherit;\r\n  height: inherit;\r\n  min-width: inherit;\r\n  min-height: inherit;\r\n  max-width: inherit;\r\n  max-height: inherit;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  border-radius: inherit;\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  padding: 0 1rem;\r\n  box-sizing: border-box;\r\n  box-shadow: inset 0 1px 0 #ffe5c49c;\r\n  translate: -50% -50%;\r\n  transition: all 100ms ease;\r\n}\r\n\r\n#samurai-kirby.showing-instructions #samurai-kirby-button {\r\n  --draw-button-color: green;\r\n}\r\n#samurai-kirby.showing-instructions #samurai-kirby-button::after {\r\n  content: 'I\\'M READY';\r\n  font-size: calc(var(--button-height) / 2.75);\r\n}\r\n\r\n#samurai-kirby.time-up #samurai-kirby-button::after,\r\n#samurai-kirby.waiting #samurai-kirby-button::after,\r\n#samurai-kirby.resetting #samurai-kirby-button::after\r\n{\r\n  content: 'NOT YET';\r\n  font-size: calc(var(--button-height) / 3.5);\r\n}\r\n\r\n#samurai-kirby.called #samurai-kirby-button::after {\r\n  content: 'DRAW!';\r\n  font-size: calc(var(--button-height) / 2.5);\r\n}\r\n\r\n#samurai-kirby.time-up #samurai-kirby-button::after {\r\n  content: 'TOO SLOW';\r\n  font-size: calc(var(--button-height) / 3.5);\r\n}\r\n\r\n#samurai-kirby.showing-score #samurai-kirby-button::after {\r\n  content: 'TRY AGAIN';\r\n  font-size: calc(var(--button-height) / 3.5);\r\n}\r\n\r\n#samurai-kirby.kirby-attacking #samurai-kirby-button {\r\n  --draw-button-color: rgb(0, 184, 0);\r\n}\r\n\r\n#samurai-kirby.kirby-attacking #samurai-kirby-button::after {\r\n  content: 'KIRBY WINS';\r\n  font-size: calc(var(--button-height) / 2.5);\r\n}\r\n#samurai-kirby.kirby-attacking #samurai-kirby-button {\r\n  /* pointer-events: none; */\r\n}\r\n#samurai-kirby.called #samurai-kirby-button,\r\n#samurai-kirby.showing-score #samurai-kirby-button\r\n{\r\n  --draw-button-color: red;\r\n}\r\n\r\n#samurai-kirby.fouled #samurai-kirby-button::after {\r\n  content: 'FOUL!';\r\n  font-size: calc(var(--button-height) / 2.5);\r\n}\r\n#samurai-kirby.fouled #samurai-kirby-button {\r\n  --draw-button-color: rgb(83, 67, 67);\r\n}\r\n\r\n.start-button, #quit-button {\r\n  height: calc(var(--button-height) * 1);\r\n  font-size: calc(var(--button-height) / 3.5);\r\n  font-size: calc(var(--button-height) * 0.35);\r\n  font-weight: bold;\r\n  border-radius: calc(var(--button-height) * 0.325);\r\n}\r\n\r\n.start-button {\r\n  --start-button-color: green;\r\n  width: calc(var(--button-height) * 2.75);\r\n}\r\n\r\n#quit-button {\r\n  --quit-button-color: rgb(120, 120, 120);\r\n  width: calc(var(--game-screen-height) / 1.75);\r\n  height: calc(var(--button-height) * 0.8);\r\n  display: none;\r\n}\r\n\r\n#samurai-kirby.showing-score #quit-button {\r\n  display: block;\r\n}\r\n\r\n.start-button::before,\r\n#quit-button::before {\r\n  top: 5%;\r\n}\r\n\r\n.start-button::before {\r\n  background-color: var(--start-button-color);\r\n  filter: brightness(50%);\r\n}\r\n\r\n#quit-button::before {\r\n  background-color: var(--quit-button-color);\r\n  filter: brightness(50%);\r\n}\r\n\r\n.start-button::after, #quit-button::after {\r\n  text-shadow:\r\n    -1px 0 0 #222, \r\n    1px 0 0 #222,\r\n    0 -1px 0 #222,\r\n    0 1px 0 #222;\r\n}\r\n.start-button::after {\r\n  content: 'START GAME';\r\n  background-color: var(--start-button-color);\r\n}\r\n#quit-button::after {\r\n  content: 'QUIT';\r\n  background-color: var(--quit-button-color);\r\n}\r\n\r\n.fighter {\r\n  position: absolute;\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  transform-origin: 80% 80%;\r\n  transition: translate 300ms ease, left 100ms ease, right 100ms ease, bottom 100ms ease;\r\n}\r\n\r\n#kirby {\r\n  width: calc(var(--game-screen-height) * 0.45);\r\n  height: calc(var(--game-screen-height) * 0.45);\r\n  left:  calc(var(--game-screen-height) * 0.03);\r\n  bottom:  calc(var(--game-screen-height) / 10);\r\n}\r\n\r\n#kirby::after {\r\n  content: '';\r\n  position: absolute;\r\n  bottom: 35%;\r\n  right: 20%;\r\n  --height: calc(var(--game-screen-height) * 0.1);\r\n  height: var(--height);\r\n  width: calc(var(--height) * (12/16));\r\n  background-image: url(../media/samurai-kirby/images/ui/teardrop.png);\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  display: none;\r\n}\r\n\r\n#samurai-kirby.fouled #kirby::after {\r\n  display: block;\r\n  animation: drip 1000ms ease forwards;\r\n}\r\n\r\n#samurai-kirby.fouled #enemy {\r\n  animation: hop 300ms ease forwards;\r\n  animation-delay: 100ms;\r\n}\r\n\r\n#samurai-kirby.fouled #kirby {\r\n  animation: hop-left 300ms ease forwards;\r\n}\r\n\r\n#enemy {\r\n  height: calc(var(--game-screen-height) * 0.6);\r\n  width: calc((var(--game-screen-height) * 0.6) / (96/128));\r\n  left:  unset;\r\n  right: calc(var(--game-screen-height) / 18);\r\n  bottom:  calc(var(--game-screen-height) / 2.2);\r\n  display: none;\r\n}\r\n\r\n#kirby.bouncing {\r\n  animation: bounce-right 100ms ease alternate infinite forwards;\r\n}\r\n\r\n#enemy.bouncing {\r\n  animation: bounce-left 100ms ease alternate infinite forwards;\r\n}\r\n\r\nbody:not(.round-started) #kirby {\r\n  translate: calc(var(--game-screen-height) * -0.5) 0;\r\n}\r\n\r\nbody:not(.round-started) #enemy {\r\n  translate: 100% 0;\r\n}\r\n\r\n#samurai-kirby.kirby-attacking #enemy {\r\n  animation: fly-off-right 800ms linear forwards;\r\n  animation-delay: 200ms\r\n}\r\n\r\n#samurai-kirby.kirby-attacking #kirby {\r\n  left:  calc(var(--game-screen-height) * 0.25);\r\n  bottom:  calc(var(--game-screen-height) / 4.5);\r\n  transition-delay: 200ms;\r\n}\r\n\r\n#samurai-kirby.time-up #kirby {\r\n  animation: fly-off-left 400ms linear forwards;\r\n  animation-delay: 200ms\r\n}\r\n\r\n#samurai-kirby.time-up #enemy {\r\n  right: calc(var(--game-screen-height) / 6);\r\n  bottom:  calc(var(--game-screen-height) / 3.5);\r\n  transition-delay: 200ms;\r\n}\r\n\r\n#exclamation-point {\r\n  position: absolute;\r\n  background-image: url(../media/samurai-kirby/images/ui/exclamationpointfilled.png);\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  width: calc(var(--game-screen-height) * 0.3125);\r\n  height: calc(var(--game-screen-height) * 0.3125);\r\n  left: 50%;\r\n  top: 50%;\r\n  translate: -50% -50%;\r\n  opacity: 0;\r\n  scale: 0.7;\r\n  transition: opacity 200ms ease, scale 200ms ease;\r\n  animation: flash 60ms linear infinite;\r\n}\r\n\r\n#samurai-kirby.called #exclamation-point {\r\n  opacity: 1;\r\n  scale: 1;\r\n}\r\n\r\n#score-post {\r\n  position: absolute;\r\n  bottom: 0;\r\n  right: calc(var(--game-screen-height) / 40);\r\n  --height: calc(var(--game-screen-height) / 4);\r\n  height: var(--height);\r\n  width: calc(var(--height) * 1.5);\r\n  background-image: url(../media/samurai-kirby/images/ui/scorepostwide.png);\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  padding-right: 0.5%;\r\n  translate: 0 100%;\r\n  transition: translate 500ms ease;\r\n}\r\n\r\n#score-post > .score-numeral {\r\n  filter: unset;\r\n}\r\n\r\n#samurai-kirby.fouled #score-post::after {\r\n  content: '';\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  translate: -50% -50%;\r\n  width: calc(var(--game-screen-height) * 0.15);\r\n  height: calc(var(--game-screen-height) * 0.15);\r\n  background-image: url(../media/samurai-kirby/images/ui/xmark.png);\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  rotate: -90deg;\r\n}\r\n\r\n#score-post.showing {\r\n  translate: none;\r\n}\r\n\r\n.score-numeral {\r\n  width: calc(var(--game-screen-height) * 0.05625);\r\n  height: calc(var(--game-screen-height) * 0.05625 * (16/9));\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  background-position: left;\r\n}\r\n\r\n.white {\r\n  filter: invert();\r\n}\r\n\r\n.green {\r\n  filter: invert() sepia(100%) hue-rotate(30deg) saturate(100);\r\n}\r\n\r\n.red {\r\n  filter: invert() sepia(100%) hue-rotate(289deg) saturate(220);\r\n}\r\n\r\n.brown {\r\n  filter: invert() sepia(100%) hue-rotate(313deg) saturate(280) brightness(0.25);\r\n}\r\n\r\n#player-score, #player-level {\r\n  position: absolute;\r\n  top: calc(var(--game-screen-height));\r\n  left: 0;\r\n  font-size: 1.5rem;\r\n  margin-left: 1rem;\r\n  color: white;\r\n  height: calc(var(--game-screen-height) / 6);\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n#player-score-display, #score-change-display, #player-level, #fastest-time-display {\r\n  display: flex;\r\n}\r\n\r\n#score-change-display {\r\n  position: absolute;\r\n  top: calc(var(--game-screen-height) / 12);\r\n  left: calc(100% + (var(--game-screen-height) / 30));\r\n  opacity: 0;\r\n  scale: 0.75;\r\n  translate: 0 -50%;\r\n  transform-origin: left;\r\n  transition: opacity 300ms ease;\r\n  z-index: 1;\r\n  /* display: none; */\r\n}\r\n\r\n#score-change-display.showing {\r\n  opacity: 1;\r\n  animation: slide-left 300ms ease forwards;\r\n}\r\n\r\n.player-status {\r\n  opacity: 0;\r\n  transition: opacity 300ms ease;\r\n}\r\n\r\nbody.round-started #samurai-kirby:not(.showing-score, .resetting) .player-status {\r\n  opacity: 1;\r\n}\r\n\r\n#player-level {\r\n  display: flex;\r\n  align-items: center;\r\n  gap: 1rem;\r\n  left: unset;\r\n  right: 0;\r\n  margin-right: 1rem;\r\n  font-size: calc(var(--game-screen-height) / 16);\r\n}\r\n\r\n#lives-area {\r\n  position: absolute;\r\n  top: calc(var(--game-screen-height) / 60);\r\n  left: calc(var(--game-screen-height) / 60);\r\n  display: flex;\r\n  gap: calc(var(--game-screen-height) / 60);\r\n}\r\n\r\n#lives-area > .life-marker {\r\n  width: calc(var(--game-screen-height) * 0.1);\r\n  height: calc(var(--game-screen-height) * 0.1);\r\n  background-image: url(../media/samurai-kirby/images/ui/xmark.png);\r\n  background-repeat: no-repeat;\r\n  background-size: contain;\r\n  opacity: 0.3;\r\n  transition: opacity 300ms ease;\r\n}\r\n\r\n#lives-area > .life-marker.filled {\r\n  opacity: 1\r\n}\r\n\r\n@keyframes flash {\r\n  from {\r\n    background-image: url(../media/samurai-kirby/images/ui/exclamationpointfilled.png);\r\n  }\r\n  to {\r\n    background-image: url(../media/samurai-kirby/images/ui/exclamationpoint.png);\r\n  }\r\n}\r\n\r\n@keyframes blink {\r\n  from {\r\n    opacity: 1;\r\n  }\r\n  to {\r\n    opacity: 0;\r\n  }\r\n}\r\n\r\n@keyframes zoom-in {\r\n  from {\r\n    scale: 1;\r\n  }\r\n  to {\r\n    scale: 2;\r\n  }\r\n}\r\n\r\n@keyframes fly-off-right {\r\n  from {\r\n    translate: 0;\r\n    rotate: 0;\r\n    scale: 1;\r\n  }\r\n  50% {\r\n    translate: 5% -80%;\r\n    scale: 0.75;\r\n  }\r\n  to {\r\n    translate: -10% 0;\r\n    rotate: 430deg;\r\n    scale: 0.2;\r\n  }\r\n}\r\n\r\n@keyframes fly-off-left {\r\n  from {\r\n    translate: 0;\r\n    rotate: 0;\r\n    scale: 1;\r\n  }\r\n  50% {\r\n    translate: -25% -60%;\r\n    scale: 1.05;\r\n  }\r\n  to {\r\n    translate: -50% -30%;\r\n    rotate: -180deg;\r\n    scale: 1.1;\r\n  }\r\n}\r\n\r\n@keyframes drip {\r\n  from {\r\n    translate: 0 0;\r\n  }\r\n  to {\r\n    translate: 0 calc(var(--game-screen-height) * 0.08);\r\n  }\r\n}\r\n\r\n@keyframes hop {\r\n  from {\r\n    translate: 0 0;\r\n  }\r\n  50% {\r\n    translate: 0 calc(var(--game-screen-height) * -0.05);\r\n  }\r\n  to {\r\n    translate: 0 0;\r\n  }\r\n}\r\n\r\n@keyframes hop-left {\r\n  from {\r\n    translate: 0 0;\r\n    rotate: 0deg\r\n  }\r\n  50% {\r\n    translate: calc(var(--game-screen-height) * -0.05) calc(var(--game-screen-height) * -0.05);\r\n  }\r\n  65% {\r\n    rotate: -9deg\r\n  }\r\n  to {\r\n    translate: 0 0;\r\n    rotate: 0deg\r\n  }\r\n}\r\n\r\n@keyframes slide-left {\r\n  from {\r\n    translate: calc(var(--game-screen-height) / 12) -50%;\r\n  }\r\n  to {\r\n    translate: 0 -50%;\r\n  }\r\n}\r\n\r\n@keyframes zoom-fade-in {\r\n  from {\r\n    opacity: 0;\r\n    scale: 0.8;\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    scale: 1;\r\n  }\r\n}\r\n\r\n@keyframes bounce-left {\r\n  from {\r\n    margin-right: 0;\r\n  }\r\n  to {\r\n    margin-right: calc(var(--game-screen-height) / 80);\r\n  }\r\n}\r\n\r\n@keyframes bounce-right {\r\n  from {\r\n    margin-left: 0;\r\n  }\r\n  to {\r\n    margin-left: calc(var(--game-screen-height) / 80);\r\n  }\r\n}\r\n\r\n@keyframes blink-border-image {\r\n  from {\r\n    border-image-outset: calc(var(--button-height) * 0.1) calc(var(--button-height) * 0.1);\r\n  }\r\n  to {\r\n    border-image-outset: calc(var(--button-height) * 0.18) calc(var(--button-height) * 0.2);\r\n  }\r\n}\r\n\r\n@keyframes land {\r\n  from {\r\n    opacity: 0;\r\n    scale: 1.2\r\n  }\r\n  to {\r\n    opacity: 1;\r\n    scale: 1\r\n  }\r\n}\r\n\r\n.loading-bar {\r\n  position: fixed;\r\n  left: 50%;\r\n  bottom: calc(var(--controls-height) * 0.08);\r\n  width: calc(var(--button-height) * 3);\r\n  height: calc(var(--controls-height) * 0.1);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background-color: #ffffff33;\r\n  border: calc(var(--button-height) / 48) solid #ffffff99;\r\n  transform-origin: left center;\r\n  translate: -50% 0;\r\n  pointer-events: none;\r\n}\r\n\r\n.loading-bar > .label {\r\n  color: var(--control-panel-bg-color);\r\n  font-size: calc(var(--button-height) * 0.175);\r\n  z-index: 1;\r\n}\r\n\r\n.loading-bar > .filler {\r\n  position: absolute;\r\n  transform-origin: inherit;\r\n  width: inherit;\r\n  height: inherit;\r\n  left: 0;\r\n  top: 0;\r\n  background-color: rgba(255, 255, 255, 0.293);\r\n  scale: 1% 1;\r\n  transition: scale 200ms ease;\r\n}\r\n\r\n.loading-bar > .details {\r\n  font-size: 70%;\r\n  color: #aaa;\r\n  position: absolute;\r\n  height: inherit;\r\n  text-align: center;\r\n  translate: 0 125%;\r\n}\r\n\r\n#kotd-instructions-screen {\r\n  pointer-events: none;\r\n}\r\n\r\n#kotd-screen, #kotd-instructions-screen {\r\n  width: var(--ds-screen-width);\r\n  height: calc(var(--ds-screen-height) * 2);\r\n  z-index: 1;\r\n}\r\n\r\n.top-screen, .bottom-screen {\r\n  position: relative;\r\n  width: var(--ds-screen-width);\r\n  height: var(--ds-screen-height);\r\n}\r\n\r\n.top-screen, .bottom-screen {\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n}\r\n\r\n#kotd-instructions-screen > .top-screen {\r\n  background-image: url(../media/kotd/images/ui/kotdtitlescreen.png);\r\n}\r\n#kotd-instructions-screen > .bottom-screen {\r\n  background-image: url(../media/kotd/images/ui/kotdinstructions.png);\r\n}\r\n#kotd-screen > .top-screen {\r\n  background-image: url(../media/kotd/images/ui/bgtop.png);\r\n}\r\n#kotd-screen > .bottom-screen {\r\n  background-image: url(../media/kotd/images/ui/bgbottom.png);\r\n}\r\n#kotd-screen > .bottom-screen > #lower-indoor-bg {\r\n  position: absolute;\r\n  bottom: 0;\r\n  width: var(--ds-screen-width);\r\n  height: calc(var(--ds-screen-height) / 3);\r\n  background-image: url(../media/kotd/images/ui/indoorlowerbg.png);\r\n  background-repeat: no-repeat;\r\n  background-size: auto 100%;\r\n}\r\n\r\n#kotd-score-bar, #kotd-score-bar > div {\r\n  height: calc(var(--ds-screen-height) / 6);\r\n  background-size: auto 100%;\r\n  background-repeat: repeat-x;\r\n}\r\n\r\n#kotd-score-bar {\r\n  position: absolute;\r\n  width: var(--ds-screen-width);\r\n  display: flex;\r\n  bottom: 0;\r\n  z-index: 3;\r\n}\r\n#kotd-ammo-bar {\r\n  flex-grow: 1;\r\n  display: flex;\r\n}\r\n.ammo-slot {\r\n  height: inherit;\r\n  width: calc(var(--ds-screen-height) / 8);\r\n  background-image: url(../media/kotd/images/ui/ammoslot.png);\r\n  background-repeat: no-repeat;\r\n  background-size: auto 100%;\r\n  background-position-x: calc(var(--ds-screen-height) / -8);\r\n}\r\n.ammo-slot.empty {\r\n  background-position-x: 0;\r\n}\r\n#kotd-score-area {\r\n  width: calc(var(--ds-screen-height) / 3);\r\n  background-image: url(../media/kotd/images/ui/scorebaredgeleft.png);\r\n  \r\n}\r\n#kotd-score-end {\r\n  width: calc(var(--ds-screen-height) / 24);\r\n  background-image: url(../media/kotd/images/ui/scorebaredgeright.png);\r\n}\r\n\r\n#kotd-controls {\r\n  position: fixed;\r\n  background-color: rgb(82, 53, 42);\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  min-height: calc(var(--actual-height) - (var(--ds-screen-height) * 2));\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 2;\r\n}\r\n\r\n#kotd-button::after {\r\n  background-color: green;\r\n  content: \"GOT IT\";\r\n}\r\n\r\n#kotd-button {\r\n  transition: all 300ms ease !important;\r\n}\r\n#kotd-button.invisible {\r\n  opacity: 0;\r\n  pointer-events: none;\r\n}\r\n#kotd-kirby-area {\r\n  width: var(--ds-screen-width);\r\n  position: absolute;\r\n  bottom: calc(var(--ds-screen-height) / 3.25);\r\n  display: flex;\r\n  justify-content: space-around;\r\n\r\n}\r\n.kotd-kirby {\r\n  --kotd-kirby-height: calc(var(--ds-screen-height) / 3.428);\r\n  --spacing-x: calc(var(--ds-screen-height) / -3.428);\r\n  height: var(--kotd-kirby-height);\r\n  width: var(--kotd-kirby-height);\r\n  background-image: url(../media/kotd/images/ui/kotdkirbysheet.png);\r\n  background-repeat: no-repeat;\r\n  background-size: auto 100%;\r\n}\r\n\r\n.kotd-kirby.player {\r\n  background-position-x: 0;\r\n}\r\n.kotd-kirby.player.firing {\r\n  background-position-x: calc(var(--spacing-x) * 1);\r\n}\r\n.kotd-kirby.player.fired {\r\n  background-position-x: calc(var(--spacing-x) * 2);\r\n}\r\n.kotd-kirby.yellow {\r\n  background-position-x: calc(var(--spacing-x) * 3);\r\n}\r\n.kotd-kirby.pink {\r\n  background-position-x: calc(var(--spacing-x) * 6);\r\n}\r\n.kotd-kirby.lime {\r\n  background-position-x: calc(var(--spacing-x) * 9);\r\n}\r\n\r\n.enemy-container {\r\n  position: absolute;\r\n  transform-origin: 50% 175%;\r\n  transition: opacity 500ms ease, translate 600ms ease;\r\n}\r\n\r\n.enemy-container.bottom-edge {\r\n  bottom: calc(var(--ds-screen-height) / 2.5 * 0.5)\r\n}\r\n.enemy-container.bottom-edge.obscured {\r\n  translate: 0 100%;\r\n}\r\n.enemy-container.bottom-edge.dead {\r\n  animation: spin 80ms linear alternate infinite;\r\n  translate: 0 150%;\r\n}\r\n.enemy-container > .pole {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  bottom: 0;\r\n  translate: -50% 0;\r\n\r\n  background-image: url(../media/kotd/images/ui/poletile.png);\r\n  background-repeat: repeat-y;\r\n  width: calc(var(--ds-screen-height) / 21.333);\r\n  height: calc(var(--ds-screen-height) / 2.5);\r\n  pointer-events: none;\r\n  /* z-index: 0; */\r\n}\r\n\r\n.enemy-container.bottom-edge {\r\n  bottom: calc(var(--ds-screen-height) / 2.5 * 0.5)\r\n}\r\n\r\n.kotd-enemy {\r\n  position: relative;\r\n  --kotd-enemy-height: calc(var(--ds-screen-height) / 3);\r\n  --spacing-x: calc(var(--ds-screen-height) / -3);\r\n  height: var(--kotd-enemy-height);\r\n  width: var(--kotd-enemy-height);\r\n  background-image: url(../media/kotd/images/ui/kotdenemysheet.png);\r\n  background-repeat: no-repeat;\r\n  background-size: auto 100%;\r\n}\r\n\r\n.kotd-enemy.waddledee {\r\n  background-position-x: 0;\r\n}\r\n.kotd-enemy.cappy {\r\n  background-position-x: calc(var(--spacing-x) * 1);\r\n}\r\n.kotd-enemy.brontoburt {\r\n  background-position-x: calc(var(--spacing-x) * 2);\r\n}\r\n.kotd-enemy.knucklejoe {\r\n  background-position-x: calc(var(--spacing-x) * 3);\r\n}\r\n.kotd-enemy.waddledoo {\r\n  background-position-x: calc(var(--spacing-x) * 4);\r\n}\r\n.kotd-enemy.chefkawasaki {\r\n  background-position-x: calc(var(--spacing-x) * 5);\r\n}\r\n.kotd-enemy.bonkers {\r\n  background-position-x: calc(var(--spacing-x) * 6);\r\n}\r\n.kotd-enemy.dedede {\r\n  background-position-x: calc(var(--spacing-x) * 7);\r\n}\r\n.kotd-enemy.metaknight {\r\n  background-position-x: calc(var(--spacing-x) * 8);\r\n}\r\n\r\n@keyframes wobble {\r\n  from {\r\n    rotate: -15deg;\r\n  }\r\n  to {\r\n    rotate: 15deg;\r\n  }\r\n}\r\n@keyframes spin {\r\n  from {\r\n    scale: 1 1;\r\n  }\r\n  to {\r\n    scale: 0 1;\r\n  }\r\n}\r\n"],sourceRoot:""}]);const kn=N},3645:n=>{"use strict";n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var r="",t=void 0!==e[5];return e[4]&&(r+="@supports (".concat(e[4],") {")),e[2]&&(r+="@media ".concat(e[2]," {")),t&&(r+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),r+=n(e),t&&(r+="}"),e[2]&&(r+="}"),e[4]&&(r+="}"),r})).join("")},e.i=function(n,r,t,a,i){"string"==typeof n&&(n=[[null,n,void 0]]);var o={};if(t)for(var s=0;s<this.length;s++){var A=this[s][0];null!=A&&(o[A]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);t&&o[l[0]]||(void 0!==i&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=i),r&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=r):l[2]=r),a&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=a):l[4]="".concat(a)),e.push(l))}},e}},1667:n=>{"use strict";n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},7537:n=>{"use strict";n.exports=function(n){var e=n[1],r=n[3];if(!r)return e;if("function"==typeof btoa){var t=btoa(unescape(encodeURIComponent(JSON.stringify(r)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(t),i="/*# ".concat(a," */");return[e].concat([i]).join("\n")}return[e].join("\n")}},1766:(n,e,r)=>{var t;!function(){"use strict";var a=function(){this.init()};a.prototype={init:function(){var n=this||i;return n._counter=1e3,n._html5AudioPool=[],n.html5PoolSize=10,n._codecs={},n._howls=[],n._muted=!1,n._volume=1,n._canPlayEvent="canplaythrough",n._navigator="undefined"!=typeof window&&window.navigator?window.navigator:null,n.masterGain=null,n.noAudio=!1,n.usingWebAudio=!0,n.autoSuspend=!0,n.ctx=null,n.autoUnlock=!0,n._setup(),n},volume:function(n){var e=this||i;if(n=parseFloat(n),e.ctx||g(),void 0!==n&&n>=0&&n<=1){if(e._volume=n,e._muted)return e;e.usingWebAudio&&e.masterGain.gain.setValueAtTime(n,i.ctx.currentTime);for(var r=0;r<e._howls.length;r++)if(!e._howls[r]._webAudio)for(var t=e._howls[r]._getSoundIds(),a=0;a<t.length;a++){var o=e._howls[r]._soundById(t[a]);o&&o._node&&(o._node.volume=o._volume*n)}return e}return e._volume},mute:function(n){var e=this||i;e.ctx||g(),e._muted=n,e.usingWebAudio&&e.masterGain.gain.setValueAtTime(n?0:e._volume,i.ctx.currentTime);for(var r=0;r<e._howls.length;r++)if(!e._howls[r]._webAudio)for(var t=e._howls[r]._getSoundIds(),a=0;a<t.length;a++){var o=e._howls[r]._soundById(t[a]);o&&o._node&&(o._node.muted=!!n||o._muted)}return e},stop:function(){for(var n=this||i,e=0;e<n._howls.length;e++)n._howls[e].stop();return n},unload:function(){for(var n=this||i,e=n._howls.length-1;e>=0;e--)n._howls[e].unload();return n.usingWebAudio&&n.ctx&&void 0!==n.ctx.close&&(n.ctx.close(),n.ctx=null,g()),n},codecs:function(n){return(this||i)._codecs[n.replace(/^x-/,"")]},_setup:function(){var n=this||i;if(n.state=n.ctx&&n.ctx.state||"suspended",n._autoSuspend(),!n.usingWebAudio)if("undefined"!=typeof Audio)try{void 0===(new Audio).oncanplaythrough&&(n._canPlayEvent="canplay")}catch(e){n.noAudio=!0}else n.noAudio=!0;try{(new Audio).muted&&(n.noAudio=!0)}catch(n){}return n.noAudio||n._setupCodecs(),n},_setupCodecs:function(){var n=this||i,e=null;try{e="undefined"!=typeof Audio?new Audio:null}catch(e){return n}if(!e||"function"!=typeof e.canPlayType)return n;var r=e.canPlayType("audio/mpeg;").replace(/^no$/,""),t=n._navigator?n._navigator.userAgent:"",a=t.match(/OPR\/([0-6].)/g),o=a&&parseInt(a[0].split("/")[1],10)<33,s=-1!==t.indexOf("Safari")&&-1===t.indexOf("Chrome"),A=t.match(/Version\/(.*?) /),c=s&&A&&parseInt(A[1],10)<15;return n._codecs={mp3:!(o||!r&&!e.canPlayType("audio/mp3;").replace(/^no$/,"")),mpeg:!!r,opus:!!e.canPlayType('audio/ogg; codecs="opus"').replace(/^no$/,""),ogg:!!e.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),oga:!!e.canPlayType('audio/ogg; codecs="vorbis"').replace(/^no$/,""),wav:!!(e.canPlayType('audio/wav; codecs="1"')||e.canPlayType("audio/wav")).replace(/^no$/,""),aac:!!e.canPlayType("audio/aac;").replace(/^no$/,""),caf:!!e.canPlayType("audio/x-caf;").replace(/^no$/,""),m4a:!!(e.canPlayType("audio/x-m4a;")||e.canPlayType("audio/m4a;")||e.canPlayType("audio/aac;")).replace(/^no$/,""),m4b:!!(e.canPlayType("audio/x-m4b;")||e.canPlayType("audio/m4b;")||e.canPlayType("audio/aac;")).replace(/^no$/,""),mp4:!!(e.canPlayType("audio/x-mp4;")||e.canPlayType("audio/mp4;")||e.canPlayType("audio/aac;")).replace(/^no$/,""),weba:!(c||!e.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,"")),webm:!(c||!e.canPlayType('audio/webm; codecs="vorbis"').replace(/^no$/,"")),dolby:!!e.canPlayType('audio/mp4; codecs="ec-3"').replace(/^no$/,""),flac:!!(e.canPlayType("audio/x-flac;")||e.canPlayType("audio/flac;")).replace(/^no$/,"")},n},_unlockAudio:function(){var n=this||i;if(!n._audioUnlocked&&n.ctx){n._audioUnlocked=!1,n.autoUnlock=!1,n._mobileUnloaded||44100===n.ctx.sampleRate||(n._mobileUnloaded=!0,n.unload()),n._scratchBuffer=n.ctx.createBuffer(1,1,22050);var e=function(r){for(;n._html5AudioPool.length<n.html5PoolSize;)try{var t=new Audio;t._unlocked=!0,n._releaseHtml5Audio(t)}catch(r){n.noAudio=!0;break}for(var a=0;a<n._howls.length;a++)if(!n._howls[a]._webAudio)for(var i=n._howls[a]._getSoundIds(),o=0;o<i.length;o++){var s=n._howls[a]._soundById(i[o]);s&&s._node&&!s._node._unlocked&&(s._node._unlocked=!0,s._node.load())}n._autoResume();var A=n.ctx.createBufferSource();A.buffer=n._scratchBuffer,A.connect(n.ctx.destination),void 0===A.start?A.noteOn(0):A.start(0),"function"==typeof n.ctx.resume&&n.ctx.resume(),A.onended=function(){A.disconnect(0),n._audioUnlocked=!0,document.removeEventListener("touchstart",e,!0),document.removeEventListener("touchend",e,!0),document.removeEventListener("click",e,!0),document.removeEventListener("keydown",e,!0);for(var r=0;r<n._howls.length;r++)n._howls[r]._emit("unlock")}};return document.addEventListener("touchstart",e,!0),document.addEventListener("touchend",e,!0),document.addEventListener("click",e,!0),document.addEventListener("keydown",e,!0),n}},_obtainHtml5Audio:function(){var n=this||i;if(n._html5AudioPool.length)return n._html5AudioPool.pop();var e=(new Audio).play();return e&&"undefined"!=typeof Promise&&(e instanceof Promise||"function"==typeof e.then)&&e.catch((function(){console.warn("HTML5 Audio pool exhausted, returning potentially locked audio object.")})),new Audio},_releaseHtml5Audio:function(n){var e=this||i;return n._unlocked&&e._html5AudioPool.push(n),e},_autoSuspend:function(){var n=this;if(n.autoSuspend&&n.ctx&&void 0!==n.ctx.suspend&&i.usingWebAudio){for(var e=0;e<n._howls.length;e++)if(n._howls[e]._webAudio)for(var r=0;r<n._howls[e]._sounds.length;r++)if(!n._howls[e]._sounds[r]._paused)return n;return n._suspendTimer&&clearTimeout(n._suspendTimer),n._suspendTimer=setTimeout((function(){if(n.autoSuspend){n._suspendTimer=null,n.state="suspending";var e=function(){n.state="suspended",n._resumeAfterSuspend&&(delete n._resumeAfterSuspend,n._autoResume())};n.ctx.suspend().then(e,e)}}),3e4),n}},_autoResume:function(){var n=this;if(n.ctx&&void 0!==n.ctx.resume&&i.usingWebAudio)return"running"===n.state&&"interrupted"!==n.ctx.state&&n._suspendTimer?(clearTimeout(n._suspendTimer),n._suspendTimer=null):"suspended"===n.state||"running"===n.state&&"interrupted"===n.ctx.state?(n.ctx.resume().then((function(){n.state="running";for(var e=0;e<n._howls.length;e++)n._howls[e]._emit("resume")})),n._suspendTimer&&(clearTimeout(n._suspendTimer),n._suspendTimer=null)):"suspending"===n.state&&(n._resumeAfterSuspend=!0),n}};var i=new a,o=function(n){n.src&&0!==n.src.length?this.init(n):console.error("An array of source files must be passed with any new Howl.")};o.prototype={init:function(n){var e=this;return i.ctx||g(),e._autoplay=n.autoplay||!1,e._format="string"!=typeof n.format?n.format:[n.format],e._html5=n.html5||!1,e._muted=n.mute||!1,e._loop=n.loop||!1,e._pool=n.pool||5,e._preload="boolean"!=typeof n.preload&&"metadata"!==n.preload||n.preload,e._rate=n.rate||1,e._sprite=n.sprite||{},e._src="string"!=typeof n.src?n.src:[n.src],e._volume=void 0!==n.volume?n.volume:1,e._xhr={method:n.xhr&&n.xhr.method?n.xhr.method:"GET",headers:n.xhr&&n.xhr.headers?n.xhr.headers:null,withCredentials:!(!n.xhr||!n.xhr.withCredentials)&&n.xhr.withCredentials},e._duration=0,e._state="unloaded",e._sounds=[],e._endTimers={},e._queue=[],e._playLock=!1,e._onend=n.onend?[{fn:n.onend}]:[],e._onfade=n.onfade?[{fn:n.onfade}]:[],e._onload=n.onload?[{fn:n.onload}]:[],e._onloaderror=n.onloaderror?[{fn:n.onloaderror}]:[],e._onplayerror=n.onplayerror?[{fn:n.onplayerror}]:[],e._onpause=n.onpause?[{fn:n.onpause}]:[],e._onplay=n.onplay?[{fn:n.onplay}]:[],e._onstop=n.onstop?[{fn:n.onstop}]:[],e._onmute=n.onmute?[{fn:n.onmute}]:[],e._onvolume=n.onvolume?[{fn:n.onvolume}]:[],e._onrate=n.onrate?[{fn:n.onrate}]:[],e._onseek=n.onseek?[{fn:n.onseek}]:[],e._onunlock=n.onunlock?[{fn:n.onunlock}]:[],e._onresume=[],e._webAudio=i.usingWebAudio&&!e._html5,void 0!==i.ctx&&i.ctx&&i.autoUnlock&&i._unlockAudio(),i._howls.push(e),e._autoplay&&e._queue.push({event:"play",action:function(){e.play()}}),e._preload&&"none"!==e._preload&&e.load(),e},load:function(){var n=this,e=null;if(i.noAudio)n._emit("loaderror",null,"No audio support.");else{"string"==typeof n._src&&(n._src=[n._src]);for(var r=0;r<n._src.length;r++){var t,a;if(n._format&&n._format[r])t=n._format[r];else{if("string"!=typeof(a=n._src[r])){n._emit("loaderror",null,"Non-string found in selected audio sources - ignoring.");continue}(t=/^data:audio\/([^;,]+);/i.exec(a))||(t=/\.([^.]+)$/.exec(a.split("?",1)[0])),t&&(t=t[1].toLowerCase())}if(t||console.warn('No file extension was found. Consider using the "format" property or specify an extension.'),t&&i.codecs(t)){e=n._src[r];break}}if(e)return n._src=e,n._state="loading","https:"===window.location.protocol&&"http:"===e.slice(0,5)&&(n._html5=!0,n._webAudio=!1),new s(n),n._webAudio&&c(n),n;n._emit("loaderror",null,"No codec support for selected audio sources.")}},play:function(n,e){var r=this,t=null;if("number"==typeof n)t=n,n=null;else{if("string"==typeof n&&"loaded"===r._state&&!r._sprite[n])return null;if(void 0===n&&(n="__default",!r._playLock)){for(var a=0,o=0;o<r._sounds.length;o++)r._sounds[o]._paused&&!r._sounds[o]._ended&&(a++,t=r._sounds[o]._id);1===a?n=null:t=null}}var s=t?r._soundById(t):r._inactiveSound();if(!s)return null;if(t&&!n&&(n=s._sprite||"__default"),"loaded"!==r._state){s._sprite=n,s._ended=!1;var A=s._id;return r._queue.push({event:"play",action:function(){r.play(A)}}),A}if(t&&!s._paused)return e||r._loadQueue("play"),s._id;r._webAudio&&i._autoResume();var c=Math.max(0,s._seek>0?s._seek:r._sprite[n][0]/1e3),l=Math.max(0,(r._sprite[n][0]+r._sprite[n][1])/1e3-c),d=1e3*l/Math.abs(s._rate),u=r._sprite[n][0]/1e3,g=(r._sprite[n][0]+r._sprite[n][1])/1e3;s._sprite=n,s._ended=!1;var h=function(){s._paused=!1,s._seek=c,s._start=u,s._stop=g,s._loop=!(!s._loop&&!r._sprite[n][2])};if(!(c>=g)){var m=s._node;if(r._webAudio){var p=function(){r._playLock=!1,h(),r._refreshBuffer(s);var n=s._muted||r._muted?0:s._volume;m.gain.setValueAtTime(n,i.ctx.currentTime),s._playStart=i.ctx.currentTime,void 0===m.bufferSource.start?s._loop?m.bufferSource.noteGrainOn(0,c,86400):m.bufferSource.noteGrainOn(0,c,l):s._loop?m.bufferSource.start(0,c,86400):m.bufferSource.start(0,c,l),d!==1/0&&(r._endTimers[s._id]=setTimeout(r._ended.bind(r,s),d)),e||setTimeout((function(){r._emit("play",s._id),r._loadQueue()}),0)};"running"===i.state&&"interrupted"!==i.ctx.state?p():(r._playLock=!0,r.once("resume",p),r._clearTimer(s._id))}else{var C=function(){m.currentTime=c,m.muted=s._muted||r._muted||i._muted||m.muted,m.volume=s._volume*i.volume(),m.playbackRate=s._rate;try{var t=m.play();if(t&&"undefined"!=typeof Promise&&(t instanceof Promise||"function"==typeof t.then)?(r._playLock=!0,h(),t.then((function(){r._playLock=!1,m._unlocked=!0,e?r._loadQueue():r._emit("play",s._id)})).catch((function(){r._playLock=!1,r._emit("playerror",s._id,"Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction."),s._ended=!0,s._paused=!0}))):e||(r._playLock=!1,h(),r._emit("play",s._id)),m.playbackRate=s._rate,m.paused)return void r._emit("playerror",s._id,"Playback was unable to start. This is most commonly an issue on mobile devices and Chrome where playback was not within a user interaction.");"__default"!==n||s._loop?r._endTimers[s._id]=setTimeout(r._ended.bind(r,s),d):(r._endTimers[s._id]=function(){r._ended(s),m.removeEventListener("ended",r._endTimers[s._id],!1)},m.addEventListener("ended",r._endTimers[s._id],!1))}catch(n){r._emit("playerror",s._id,n)}};"data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA"===m.src&&(m.src=r._src,m.load());var b=window&&window.ejecta||!m.readyState&&i._navigator.isCocoonJS;if(m.readyState>=3||b)C();else{r._playLock=!0,r._state="loading";var f=function(){r._state="loaded",C(),m.removeEventListener(i._canPlayEvent,f,!1)};m.addEventListener(i._canPlayEvent,f,!1),r._clearTimer(s._id)}}return s._id}r._ended(s)},pause:function(n){var e=this;if("loaded"!==e._state||e._playLock)return e._queue.push({event:"pause",action:function(){e.pause(n)}}),e;for(var r=e._getSoundIds(n),t=0;t<r.length;t++){e._clearTimer(r[t]);var a=e._soundById(r[t]);if(a&&!a._paused&&(a._seek=e.seek(r[t]),a._rateSeek=0,a._paused=!0,e._stopFade(r[t]),a._node))if(e._webAudio){if(!a._node.bufferSource)continue;void 0===a._node.bufferSource.stop?a._node.bufferSource.noteOff(0):a._node.bufferSource.stop(0),e._cleanBuffer(a._node)}else isNaN(a._node.duration)&&a._node.duration!==1/0||a._node.pause();arguments[1]||e._emit("pause",a?a._id:null)}return e},stop:function(n,e){var r=this;if("loaded"!==r._state||r._playLock)return r._queue.push({event:"stop",action:function(){r.stop(n)}}),r;for(var t=r._getSoundIds(n),a=0;a<t.length;a++){r._clearTimer(t[a]);var i=r._soundById(t[a]);i&&(i._seek=i._start||0,i._rateSeek=0,i._paused=!0,i._ended=!0,r._stopFade(t[a]),i._node&&(r._webAudio?i._node.bufferSource&&(void 0===i._node.bufferSource.stop?i._node.bufferSource.noteOff(0):i._node.bufferSource.stop(0),r._cleanBuffer(i._node)):isNaN(i._node.duration)&&i._node.duration!==1/0||(i._node.currentTime=i._start||0,i._node.pause(),i._node.duration===1/0&&r._clearSound(i._node))),e||r._emit("stop",i._id))}return r},mute:function(n,e){var r=this;if("loaded"!==r._state||r._playLock)return r._queue.push({event:"mute",action:function(){r.mute(n,e)}}),r;if(void 0===e){if("boolean"!=typeof n)return r._muted;r._muted=n}for(var t=r._getSoundIds(e),a=0;a<t.length;a++){var o=r._soundById(t[a]);o&&(o._muted=n,o._interval&&r._stopFade(o._id),r._webAudio&&o._node?o._node.gain.setValueAtTime(n?0:o._volume,i.ctx.currentTime):o._node&&(o._node.muted=!!i._muted||n),r._emit("mute",o._id))}return r},volume:function(){var n,e,r,t=this,a=arguments;if(0===a.length)return t._volume;if(1===a.length||2===a.length&&void 0===a[1]?t._getSoundIds().indexOf(a[0])>=0?e=parseInt(a[0],10):n=parseFloat(a[0]):a.length>=2&&(n=parseFloat(a[0]),e=parseInt(a[1],10)),!(void 0!==n&&n>=0&&n<=1))return(r=e?t._soundById(e):t._sounds[0])?r._volume:0;if("loaded"!==t._state||t._playLock)return t._queue.push({event:"volume",action:function(){t.volume.apply(t,a)}}),t;void 0===e&&(t._volume=n),e=t._getSoundIds(e);for(var o=0;o<e.length;o++)(r=t._soundById(e[o]))&&(r._volume=n,a[2]||t._stopFade(e[o]),t._webAudio&&r._node&&!r._muted?r._node.gain.setValueAtTime(n,i.ctx.currentTime):r._node&&!r._muted&&(r._node.volume=n*i.volume()),t._emit("volume",r._id));return t},fade:function(n,e,r,t){var a=this;if("loaded"!==a._state||a._playLock)return a._queue.push({event:"fade",action:function(){a.fade(n,e,r,t)}}),a;n=Math.min(Math.max(0,parseFloat(n)),1),e=Math.min(Math.max(0,parseFloat(e)),1),r=parseFloat(r),a.volume(n,t);for(var o=a._getSoundIds(t),s=0;s<o.length;s++){var A=a._soundById(o[s]);if(A){if(t||a._stopFade(o[s]),a._webAudio&&!A._muted){var c=i.ctx.currentTime,l=c+r/1e3;A._volume=n,A._node.gain.setValueAtTime(n,c),A._node.gain.linearRampToValueAtTime(e,l)}a._startFadeInterval(A,n,e,r,o[s],void 0===t)}}return a},_startFadeInterval:function(n,e,r,t,a,i){var o=this,s=e,A=r-e,c=Math.abs(A/.01),l=Math.max(4,c>0?t/c:t),d=Date.now();n._fadeTo=r,n._interval=setInterval((function(){var a=(Date.now()-d)/t;d=Date.now(),s+=A*a,s=Math.round(100*s)/100,s=A<0?Math.max(r,s):Math.min(r,s),o._webAudio?n._volume=s:o.volume(s,n._id,!0),i&&(o._volume=s),(r<e&&s<=r||r>e&&s>=r)&&(clearInterval(n._interval),n._interval=null,n._fadeTo=null,o.volume(r,n._id),o._emit("fade",n._id))}),l)},_stopFade:function(n){var e=this,r=e._soundById(n);return r&&r._interval&&(e._webAudio&&r._node.gain.cancelScheduledValues(i.ctx.currentTime),clearInterval(r._interval),r._interval=null,e.volume(r._fadeTo,n),r._fadeTo=null,e._emit("fade",n)),e},loop:function(){var n,e,r,t=this,a=arguments;if(0===a.length)return t._loop;if(1===a.length){if("boolean"!=typeof a[0])return!!(r=t._soundById(parseInt(a[0],10)))&&r._loop;n=a[0],t._loop=n}else 2===a.length&&(n=a[0],e=parseInt(a[1],10));for(var i=t._getSoundIds(e),o=0;o<i.length;o++)(r=t._soundById(i[o]))&&(r._loop=n,t._webAudio&&r._node&&r._node.bufferSource&&(r._node.bufferSource.loop=n,n&&(r._node.bufferSource.loopStart=r._start||0,r._node.bufferSource.loopEnd=r._stop,t.playing(i[o])&&(t.pause(i[o],!0),t.play(i[o],!0)))));return t},rate:function(){var n,e,r,t=this,a=arguments;if(0===a.length?e=t._sounds[0]._id:1===a.length?t._getSoundIds().indexOf(a[0])>=0?e=parseInt(a[0],10):n=parseFloat(a[0]):2===a.length&&(n=parseFloat(a[0]),e=parseInt(a[1],10)),"number"!=typeof n)return(r=t._soundById(e))?r._rate:t._rate;if("loaded"!==t._state||t._playLock)return t._queue.push({event:"rate",action:function(){t.rate.apply(t,a)}}),t;void 0===e&&(t._rate=n),e=t._getSoundIds(e);for(var o=0;o<e.length;o++)if(r=t._soundById(e[o])){t.playing(e[o])&&(r._rateSeek=t.seek(e[o]),r._playStart=t._webAudio?i.ctx.currentTime:r._playStart),r._rate=n,t._webAudio&&r._node&&r._node.bufferSource?r._node.bufferSource.playbackRate.setValueAtTime(n,i.ctx.currentTime):r._node&&(r._node.playbackRate=n);var s=t.seek(e[o]),A=1e3*((t._sprite[r._sprite][0]+t._sprite[r._sprite][1])/1e3-s)/Math.abs(r._rate);!t._endTimers[e[o]]&&r._paused||(t._clearTimer(e[o]),t._endTimers[e[o]]=setTimeout(t._ended.bind(t,r),A)),t._emit("rate",r._id)}return t},seek:function(){var n,e,r=this,t=arguments;if(0===t.length?r._sounds.length&&(e=r._sounds[0]._id):1===t.length?r._getSoundIds().indexOf(t[0])>=0?e=parseInt(t[0],10):r._sounds.length&&(e=r._sounds[0]._id,n=parseFloat(t[0])):2===t.length&&(n=parseFloat(t[0]),e=parseInt(t[1],10)),void 0===e)return 0;if("number"==typeof n&&("loaded"!==r._state||r._playLock))return r._queue.push({event:"seek",action:function(){r.seek.apply(r,t)}}),r;var a=r._soundById(e);if(a){if(!("number"==typeof n&&n>=0)){if(r._webAudio){var o=r.playing(e)?i.ctx.currentTime-a._playStart:0,s=a._rateSeek?a._rateSeek-a._seek:0;return a._seek+(s+o*Math.abs(a._rate))}return a._node.currentTime}var A=r.playing(e);A&&r.pause(e,!0),a._seek=n,a._ended=!1,r._clearTimer(e),r._webAudio||!a._node||isNaN(a._node.duration)||(a._node.currentTime=n);var c=function(){A&&r.play(e,!0),r._emit("seek",e)};if(A&&!r._webAudio){var l=function(){r._playLock?setTimeout(l,0):c()};setTimeout(l,0)}else c()}return r},playing:function(n){var e=this;if("number"==typeof n){var r=e._soundById(n);return!!r&&!r._paused}for(var t=0;t<e._sounds.length;t++)if(!e._sounds[t]._paused)return!0;return!1},duration:function(n){var e=this,r=e._duration,t=e._soundById(n);return t&&(r=e._sprite[t._sprite][1]/1e3),r},state:function(){return this._state},unload:function(){for(var n=this,e=n._sounds,r=0;r<e.length;r++)e[r]._paused||n.stop(e[r]._id),n._webAudio||(n._clearSound(e[r]._node),e[r]._node.removeEventListener("error",e[r]._errorFn,!1),e[r]._node.removeEventListener(i._canPlayEvent,e[r]._loadFn,!1),e[r]._node.removeEventListener("ended",e[r]._endFn,!1),i._releaseHtml5Audio(e[r]._node)),delete e[r]._node,n._clearTimer(e[r]._id);var t=i._howls.indexOf(n);t>=0&&i._howls.splice(t,1);var a=!0;for(r=0;r<i._howls.length;r++)if(i._howls[r]._src===n._src||n._src.indexOf(i._howls[r]._src)>=0){a=!1;break}return A&&a&&delete A[n._src],i.noAudio=!1,n._state="unloaded",n._sounds=[],n=null,null},on:function(n,e,r,t){var a=this["_on"+n];return"function"==typeof e&&a.push(t?{id:r,fn:e,once:t}:{id:r,fn:e}),this},off:function(n,e,r){var t=this,a=t["_on"+n],i=0;if("number"==typeof e&&(r=e,e=null),e||r)for(i=0;i<a.length;i++){var o=r===a[i].id;if(e===a[i].fn&&o||!e&&o){a.splice(i,1);break}}else if(n)t["_on"+n]=[];else{var s=Object.keys(t);for(i=0;i<s.length;i++)0===s[i].indexOf("_on")&&Array.isArray(t[s[i]])&&(t[s[i]]=[])}return t},once:function(n,e,r){return this.on(n,e,r,1),this},_emit:function(n,e,r){for(var t=this,a=t["_on"+n],i=a.length-1;i>=0;i--)a[i].id&&a[i].id!==e&&"load"!==n||(setTimeout(function(n){n.call(this,e,r)}.bind(t,a[i].fn),0),a[i].once&&t.off(n,a[i].fn,a[i].id));return t._loadQueue(n),t},_loadQueue:function(n){var e=this;if(e._queue.length>0){var r=e._queue[0];r.event===n&&(e._queue.shift(),e._loadQueue()),n||r.action()}return e},_ended:function(n){var e=this,r=n._sprite;if(!e._webAudio&&n._node&&!n._node.paused&&!n._node.ended&&n._node.currentTime<n._stop)return setTimeout(e._ended.bind(e,n),100),e;var t=!(!n._loop&&!e._sprite[r][2]);if(e._emit("end",n._id),!e._webAudio&&t&&e.stop(n._id,!0).play(n._id),e._webAudio&&t){e._emit("play",n._id),n._seek=n._start||0,n._rateSeek=0,n._playStart=i.ctx.currentTime;var a=1e3*(n._stop-n._start)/Math.abs(n._rate);e._endTimers[n._id]=setTimeout(e._ended.bind(e,n),a)}return e._webAudio&&!t&&(n._paused=!0,n._ended=!0,n._seek=n._start||0,n._rateSeek=0,e._clearTimer(n._id),e._cleanBuffer(n._node),i._autoSuspend()),e._webAudio||t||e.stop(n._id,!0),e},_clearTimer:function(n){var e=this;if(e._endTimers[n]){if("function"!=typeof e._endTimers[n])clearTimeout(e._endTimers[n]);else{var r=e._soundById(n);r&&r._node&&r._node.removeEventListener("ended",e._endTimers[n],!1)}delete e._endTimers[n]}return e},_soundById:function(n){for(var e=this,r=0;r<e._sounds.length;r++)if(n===e._sounds[r]._id)return e._sounds[r];return null},_inactiveSound:function(){var n=this;n._drain();for(var e=0;e<n._sounds.length;e++)if(n._sounds[e]._ended)return n._sounds[e].reset();return new s(n)},_drain:function(){var n=this,e=n._pool,r=0,t=0;if(!(n._sounds.length<e)){for(t=0;t<n._sounds.length;t++)n._sounds[t]._ended&&r++;for(t=n._sounds.length-1;t>=0;t--){if(r<=e)return;n._sounds[t]._ended&&(n._webAudio&&n._sounds[t]._node&&n._sounds[t]._node.disconnect(0),n._sounds.splice(t,1),r--)}}},_getSoundIds:function(n){if(void 0===n){for(var e=[],r=0;r<this._sounds.length;r++)e.push(this._sounds[r]._id);return e}return[n]},_refreshBuffer:function(n){return n._node.bufferSource=i.ctx.createBufferSource(),n._node.bufferSource.buffer=A[this._src],n._panner?n._node.bufferSource.connect(n._panner):n._node.bufferSource.connect(n._node),n._node.bufferSource.loop=n._loop,n._loop&&(n._node.bufferSource.loopStart=n._start||0,n._node.bufferSource.loopEnd=n._stop||0),n._node.bufferSource.playbackRate.setValueAtTime(n._rate,i.ctx.currentTime),this},_cleanBuffer:function(n){var e=i._navigator&&i._navigator.vendor.indexOf("Apple")>=0;if(i._scratchBuffer&&n.bufferSource&&(n.bufferSource.onended=null,n.bufferSource.disconnect(0),e))try{n.bufferSource.buffer=i._scratchBuffer}catch(n){}return n.bufferSource=null,this},_clearSound:function(n){/MSIE |Trident\//.test(i._navigator&&i._navigator.userAgent)||(n.src="data:audio/wav;base64,UklGRigAAABXQVZFZm10IBIAAAABAAEARKwAAIhYAQACABAAAABkYXRhAgAAAAEA")}};var s=function(n){this._parent=n,this.init()};s.prototype={init:function(){var n=this,e=n._parent;return n._muted=e._muted,n._loop=e._loop,n._volume=e._volume,n._rate=e._rate,n._seek=0,n._paused=!0,n._ended=!0,n._sprite="__default",n._id=++i._counter,e._sounds.push(n),n.create(),n},create:function(){var n=this,e=n._parent,r=i._muted||n._muted||n._parent._muted?0:n._volume;return e._webAudio?(n._node=void 0===i.ctx.createGain?i.ctx.createGainNode():i.ctx.createGain(),n._node.gain.setValueAtTime(r,i.ctx.currentTime),n._node.paused=!0,n._node.connect(i.masterGain)):i.noAudio||(n._node=i._obtainHtml5Audio(),n._errorFn=n._errorListener.bind(n),n._node.addEventListener("error",n._errorFn,!1),n._loadFn=n._loadListener.bind(n),n._node.addEventListener(i._canPlayEvent,n._loadFn,!1),n._endFn=n._endListener.bind(n),n._node.addEventListener("ended",n._endFn,!1),n._node.src=e._src,n._node.preload=!0===e._preload?"auto":e._preload,n._node.volume=r*i.volume(),n._node.load()),n},reset:function(){var n=this,e=n._parent;return n._muted=e._muted,n._loop=e._loop,n._volume=e._volume,n._rate=e._rate,n._seek=0,n._rateSeek=0,n._paused=!0,n._ended=!0,n._sprite="__default",n._id=++i._counter,n},_errorListener:function(){var n=this;n._parent._emit("loaderror",n._id,n._node.error?n._node.error.code:0),n._node.removeEventListener("error",n._errorFn,!1)},_loadListener:function(){var n=this,e=n._parent;e._duration=Math.ceil(10*n._node.duration)/10,0===Object.keys(e._sprite).length&&(e._sprite={__default:[0,1e3*e._duration]}),"loaded"!==e._state&&(e._state="loaded",e._emit("load"),e._loadQueue()),n._node.removeEventListener(i._canPlayEvent,n._loadFn,!1)},_endListener:function(){var n=this,e=n._parent;e._duration===1/0&&(e._duration=Math.ceil(10*n._node.duration)/10,e._sprite.__default[1]===1/0&&(e._sprite.__default[1]=1e3*e._duration),e._ended(n)),n._node.removeEventListener("ended",n._endFn,!1)}};var A={},c=function(n){var e=n._src;if(A[e])return n._duration=A[e].duration,void u(n);if(/^data:[^;]+;base64,/.test(e)){for(var r=atob(e.split(",")[1]),t=new Uint8Array(r.length),a=0;a<r.length;++a)t[a]=r.charCodeAt(a);d(t.buffer,n)}else{var i=new XMLHttpRequest;i.open(n._xhr.method,e,!0),i.withCredentials=n._xhr.withCredentials,i.responseType="arraybuffer",n._xhr.headers&&Object.keys(n._xhr.headers).forEach((function(e){i.setRequestHeader(e,n._xhr.headers[e])})),i.onload=function(){var e=(i.status+"")[0];"0"===e||"2"===e||"3"===e?d(i.response,n):n._emit("loaderror",null,"Failed loading audio file with status: "+i.status+".")},i.onerror=function(){n._webAudio&&(n._html5=!0,n._webAudio=!1,n._sounds=[],delete A[e],n.load())},l(i)}},l=function(n){try{n.send()}catch(e){n.onerror()}},d=function(n,e){var r=function(){e._emit("loaderror",null,"Decoding audio data failed.")},t=function(n){n&&e._sounds.length>0?(A[e._src]=n,u(e,n)):r()};"undefined"!=typeof Promise&&1===i.ctx.decodeAudioData.length?i.ctx.decodeAudioData(n).then(t).catch(r):i.ctx.decodeAudioData(n,t,r)},u=function(n,e){e&&!n._duration&&(n._duration=e.duration),0===Object.keys(n._sprite).length&&(n._sprite={__default:[0,1e3*n._duration]}),"loaded"!==n._state&&(n._state="loaded",n._emit("load"),n._loadQueue())},g=function(){if(i.usingWebAudio){try{"undefined"!=typeof AudioContext?i.ctx=new AudioContext:"undefined"!=typeof webkitAudioContext?i.ctx=new webkitAudioContext:i.usingWebAudio=!1}catch(n){i.usingWebAudio=!1}i.ctx||(i.usingWebAudio=!1);var n=/iP(hone|od|ad)/.test(i._navigator&&i._navigator.platform),e=i._navigator&&i._navigator.appVersion.match(/OS (\d+)_(\d+)_?(\d+)?/),r=e?parseInt(e[1],10):null;if(n&&r&&r<9){var t=/safari/.test(i._navigator&&i._navigator.userAgent.toLowerCase());i._navigator&&!t&&(i.usingWebAudio=!1)}i.usingWebAudio&&(i.masterGain=void 0===i.ctx.createGain?i.ctx.createGainNode():i.ctx.createGain(),i.masterGain.gain.setValueAtTime(i._muted?0:i._volume,i.ctx.currentTime),i.masterGain.connect(i.ctx.destination)),i._setup()}};void 0===(t=function(){return{Howler:i,Howl:o}}.apply(e,[]))||(n.exports=t),e.Howler=i,e.Howl=o,void 0!==r.g?(r.g.HowlerGlobal=a,r.g.Howler=i,r.g.Howl=o,r.g.Sound=s):"undefined"!=typeof window&&(window.HowlerGlobal=a,window.Howler=i,window.Howl=o,window.Sound=s)}(),function(){"use strict";var n;HowlerGlobal.prototype._pos=[0,0,0],HowlerGlobal.prototype._orientation=[0,0,-1,0,1,0],HowlerGlobal.prototype.stereo=function(n){var e=this;if(!e.ctx||!e.ctx.listener)return e;for(var r=e._howls.length-1;r>=0;r--)e._howls[r].stereo(n);return e},HowlerGlobal.prototype.pos=function(n,e,r){var t=this;return t.ctx&&t.ctx.listener?(e="number"!=typeof e?t._pos[1]:e,r="number"!=typeof r?t._pos[2]:r,"number"!=typeof n?t._pos:(t._pos=[n,e,r],void 0!==t.ctx.listener.positionX?(t.ctx.listener.positionX.setTargetAtTime(t._pos[0],Howler.ctx.currentTime,.1),t.ctx.listener.positionY.setTargetAtTime(t._pos[1],Howler.ctx.currentTime,.1),t.ctx.listener.positionZ.setTargetAtTime(t._pos[2],Howler.ctx.currentTime,.1)):t.ctx.listener.setPosition(t._pos[0],t._pos[1],t._pos[2]),t)):t},HowlerGlobal.prototype.orientation=function(n,e,r,t,a,i){var o=this;if(!o.ctx||!o.ctx.listener)return o;var s=o._orientation;return e="number"!=typeof e?s[1]:e,r="number"!=typeof r?s[2]:r,t="number"!=typeof t?s[3]:t,a="number"!=typeof a?s[4]:a,i="number"!=typeof i?s[5]:i,"number"!=typeof n?s:(o._orientation=[n,e,r,t,a,i],void 0!==o.ctx.listener.forwardX?(o.ctx.listener.forwardX.setTargetAtTime(n,Howler.ctx.currentTime,.1),o.ctx.listener.forwardY.setTargetAtTime(e,Howler.ctx.currentTime,.1),o.ctx.listener.forwardZ.setTargetAtTime(r,Howler.ctx.currentTime,.1),o.ctx.listener.upX.setTargetAtTime(t,Howler.ctx.currentTime,.1),o.ctx.listener.upY.setTargetAtTime(a,Howler.ctx.currentTime,.1),o.ctx.listener.upZ.setTargetAtTime(i,Howler.ctx.currentTime,.1)):o.ctx.listener.setOrientation(n,e,r,t,a,i),o)},Howl.prototype.init=(n=Howl.prototype.init,function(e){var r=this;return r._orientation=e.orientation||[1,0,0],r._stereo=e.stereo||null,r._pos=e.pos||null,r._pannerAttr={coneInnerAngle:void 0!==e.coneInnerAngle?e.coneInnerAngle:360,coneOuterAngle:void 0!==e.coneOuterAngle?e.coneOuterAngle:360,coneOuterGain:void 0!==e.coneOuterGain?e.coneOuterGain:0,distanceModel:void 0!==e.distanceModel?e.distanceModel:"inverse",maxDistance:void 0!==e.maxDistance?e.maxDistance:1e4,panningModel:void 0!==e.panningModel?e.panningModel:"HRTF",refDistance:void 0!==e.refDistance?e.refDistance:1,rolloffFactor:void 0!==e.rolloffFactor?e.rolloffFactor:1},r._onstereo=e.onstereo?[{fn:e.onstereo}]:[],r._onpos=e.onpos?[{fn:e.onpos}]:[],r._onorientation=e.onorientation?[{fn:e.onorientation}]:[],n.call(this,e)}),Howl.prototype.stereo=function(n,r){var t=this;if(!t._webAudio)return t;if("loaded"!==t._state)return t._queue.push({event:"stereo",action:function(){t.stereo(n,r)}}),t;var a=void 0===Howler.ctx.createStereoPanner?"spatial":"stereo";if(void 0===r){if("number"!=typeof n)return t._stereo;t._stereo=n,t._pos=[n,0,0]}for(var i=t._getSoundIds(r),o=0;o<i.length;o++){var s=t._soundById(i[o]);if(s){if("number"!=typeof n)return s._stereo;s._stereo=n,s._pos=[n,0,0],s._node&&(s._pannerAttr.panningModel="equalpower",s._panner&&s._panner.pan||e(s,a),"spatial"===a?void 0!==s._panner.positionX?(s._panner.positionX.setValueAtTime(n,Howler.ctx.currentTime),s._panner.positionY.setValueAtTime(0,Howler.ctx.currentTime),s._panner.positionZ.setValueAtTime(0,Howler.ctx.currentTime)):s._panner.setPosition(n,0,0):s._panner.pan.setValueAtTime(n,Howler.ctx.currentTime)),t._emit("stereo",s._id)}}return t},Howl.prototype.pos=function(n,r,t,a){var i=this;if(!i._webAudio)return i;if("loaded"!==i._state)return i._queue.push({event:"pos",action:function(){i.pos(n,r,t,a)}}),i;if(r="number"!=typeof r?0:r,t="number"!=typeof t?-.5:t,void 0===a){if("number"!=typeof n)return i._pos;i._pos=[n,r,t]}for(var o=i._getSoundIds(a),s=0;s<o.length;s++){var A=i._soundById(o[s]);if(A){if("number"!=typeof n)return A._pos;A._pos=[n,r,t],A._node&&(A._panner&&!A._panner.pan||e(A,"spatial"),void 0!==A._panner.positionX?(A._panner.positionX.setValueAtTime(n,Howler.ctx.currentTime),A._panner.positionY.setValueAtTime(r,Howler.ctx.currentTime),A._panner.positionZ.setValueAtTime(t,Howler.ctx.currentTime)):A._panner.setPosition(n,r,t)),i._emit("pos",A._id)}}return i},Howl.prototype.orientation=function(n,r,t,a){var i=this;if(!i._webAudio)return i;if("loaded"!==i._state)return i._queue.push({event:"orientation",action:function(){i.orientation(n,r,t,a)}}),i;if(r="number"!=typeof r?i._orientation[1]:r,t="number"!=typeof t?i._orientation[2]:t,void 0===a){if("number"!=typeof n)return i._orientation;i._orientation=[n,r,t]}for(var o=i._getSoundIds(a),s=0;s<o.length;s++){var A=i._soundById(o[s]);if(A){if("number"!=typeof n)return A._orientation;A._orientation=[n,r,t],A._node&&(A._panner||(A._pos||(A._pos=i._pos||[0,0,-.5]),e(A,"spatial")),void 0!==A._panner.orientationX?(A._panner.orientationX.setValueAtTime(n,Howler.ctx.currentTime),A._panner.orientationY.setValueAtTime(r,Howler.ctx.currentTime),A._panner.orientationZ.setValueAtTime(t,Howler.ctx.currentTime)):A._panner.setOrientation(n,r,t)),i._emit("orientation",A._id)}}return i},Howl.prototype.pannerAttr=function(){var n,r,t,a=this,i=arguments;if(!a._webAudio)return a;if(0===i.length)return a._pannerAttr;if(1===i.length){if("object"!=typeof i[0])return(t=a._soundById(parseInt(i[0],10)))?t._pannerAttr:a._pannerAttr;n=i[0],void 0===r&&(n.pannerAttr||(n.pannerAttr={coneInnerAngle:n.coneInnerAngle,coneOuterAngle:n.coneOuterAngle,coneOuterGain:n.coneOuterGain,distanceModel:n.distanceModel,maxDistance:n.maxDistance,refDistance:n.refDistance,rolloffFactor:n.rolloffFactor,panningModel:n.panningModel}),a._pannerAttr={coneInnerAngle:void 0!==n.pannerAttr.coneInnerAngle?n.pannerAttr.coneInnerAngle:a._coneInnerAngle,coneOuterAngle:void 0!==n.pannerAttr.coneOuterAngle?n.pannerAttr.coneOuterAngle:a._coneOuterAngle,coneOuterGain:void 0!==n.pannerAttr.coneOuterGain?n.pannerAttr.coneOuterGain:a._coneOuterGain,distanceModel:void 0!==n.pannerAttr.distanceModel?n.pannerAttr.distanceModel:a._distanceModel,maxDistance:void 0!==n.pannerAttr.maxDistance?n.pannerAttr.maxDistance:a._maxDistance,refDistance:void 0!==n.pannerAttr.refDistance?n.pannerAttr.refDistance:a._refDistance,rolloffFactor:void 0!==n.pannerAttr.rolloffFactor?n.pannerAttr.rolloffFactor:a._rolloffFactor,panningModel:void 0!==n.pannerAttr.panningModel?n.pannerAttr.panningModel:a._panningModel})}else 2===i.length&&(n=i[0],r=parseInt(i[1],10));for(var o=a._getSoundIds(r),s=0;s<o.length;s++)if(t=a._soundById(o[s])){var A=t._pannerAttr;A={coneInnerAngle:void 0!==n.coneInnerAngle?n.coneInnerAngle:A.coneInnerAngle,coneOuterAngle:void 0!==n.coneOuterAngle?n.coneOuterAngle:A.coneOuterAngle,coneOuterGain:void 0!==n.coneOuterGain?n.coneOuterGain:A.coneOuterGain,distanceModel:void 0!==n.distanceModel?n.distanceModel:A.distanceModel,maxDistance:void 0!==n.maxDistance?n.maxDistance:A.maxDistance,refDistance:void 0!==n.refDistance?n.refDistance:A.refDistance,rolloffFactor:void 0!==n.rolloffFactor?n.rolloffFactor:A.rolloffFactor,panningModel:void 0!==n.panningModel?n.panningModel:A.panningModel};var c=t._panner;c?(c.coneInnerAngle=A.coneInnerAngle,c.coneOuterAngle=A.coneOuterAngle,c.coneOuterGain=A.coneOuterGain,c.distanceModel=A.distanceModel,c.maxDistance=A.maxDistance,c.refDistance=A.refDistance,c.rolloffFactor=A.rolloffFactor,c.panningModel=A.panningModel):(t._pos||(t._pos=a._pos||[0,0,-.5]),e(t,"spatial"))}return a},Sound.prototype.init=function(n){return function(){var e=this,r=e._parent;e._orientation=r._orientation,e._stereo=r._stereo,e._pos=r._pos,e._pannerAttr=r._pannerAttr,n.call(this),e._stereo?r.stereo(e._stereo):e._pos&&r.pos(e._pos[0],e._pos[1],e._pos[2],e._id)}}(Sound.prototype.init),Sound.prototype.reset=function(n){return function(){var e=this,r=e._parent;return e._orientation=r._orientation,e._stereo=r._stereo,e._pos=r._pos,e._pannerAttr=r._pannerAttr,e._stereo?r.stereo(e._stereo):e._pos?r.pos(e._pos[0],e._pos[1],e._pos[2],e._id):e._panner&&(e._panner.disconnect(0),e._panner=void 0,r._refreshBuffer(e)),n.call(this)}}(Sound.prototype.reset);var e=function(n,e){"spatial"===(e=e||"spatial")?(n._panner=Howler.ctx.createPanner(),n._panner.coneInnerAngle=n._pannerAttr.coneInnerAngle,n._panner.coneOuterAngle=n._pannerAttr.coneOuterAngle,n._panner.coneOuterGain=n._pannerAttr.coneOuterGain,n._panner.distanceModel=n._pannerAttr.distanceModel,n._panner.maxDistance=n._pannerAttr.maxDistance,n._panner.refDistance=n._pannerAttr.refDistance,n._panner.rolloffFactor=n._pannerAttr.rolloffFactor,n._panner.panningModel=n._pannerAttr.panningModel,void 0!==n._panner.positionX?(n._panner.positionX.setValueAtTime(n._pos[0],Howler.ctx.currentTime),n._panner.positionY.setValueAtTime(n._pos[1],Howler.ctx.currentTime),n._panner.positionZ.setValueAtTime(n._pos[2],Howler.ctx.currentTime)):n._panner.setPosition(n._pos[0],n._pos[1],n._pos[2]),void 0!==n._panner.orientationX?(n._panner.orientationX.setValueAtTime(n._orientation[0],Howler.ctx.currentTime),n._panner.orientationY.setValueAtTime(n._orientation[1],Howler.ctx.currentTime),n._panner.orientationZ.setValueAtTime(n._orientation[2],Howler.ctx.currentTime)):n._panner.setOrientation(n._orientation[0],n._orientation[1],n._orientation[2])):(n._panner=Howler.ctx.createStereoPanner(),n._panner.pan.setValueAtTime(n._stereo,Howler.ctx.currentTime)),n._panner.connect(n._node),n._paused||n._parent.pause(n._id,!0).play(n._id,!0)}}()},3379:n=>{"use strict";var e=[];function r(n){for(var r=-1,t=0;t<e.length;t++)if(e[t].identifier===n){r=t;break}return r}function t(n,t){for(var i={},o=[],s=0;s<n.length;s++){var A=n[s],c=t.base?A[0]+t.base:A[0],l=i[c]||0,d="".concat(c," ").concat(l);i[c]=l+1;var u=r(d),g={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==u)e[u].references++,e[u].updater(g);else{var h=a(g,t);t.byIndex=s,e.splice(s,0,{identifier:d,updater:h,references:1})}o.push(d)}return o}function a(n,e){var r=e.domAPI(e);return r.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;r.update(n=e)}else r.remove()}}n.exports=function(n,a){var i=t(n=n||[],a=a||{});return function(n){n=n||[];for(var o=0;o<i.length;o++){var s=r(i[o]);e[s].references--}for(var A=t(n,a),c=0;c<i.length;c++){var l=r(i[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}i=A}}},569:n=>{"use strict";var e={};n.exports=function(n,r){var t=function(n){if(void 0===e[n]){var r=document.querySelector(n);if(window.HTMLIFrameElement&&r instanceof window.HTMLIFrameElement)try{r=r.contentDocument.head}catch(n){r=null}e[n]=r}return e[n]}(n);if(!t)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");t.appendChild(r)}},9216:n=>{"use strict";n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},3565:(n,e,r)=>{"use strict";n.exports=function(n){var e=r.nc;e&&n.setAttribute("nonce",e)}},7795:n=>{"use strict";n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(r){!function(n,e,r){var t="";r.supports&&(t+="@supports (".concat(r.supports,") {")),r.media&&(t+="@media ".concat(r.media," {"));var a=void 0!==r.layer;a&&(t+="@layer".concat(r.layer.length>0?" ".concat(r.layer):""," {")),t+=r.css,a&&(t+="}"),r.media&&(t+="}"),r.supports&&(t+="}");var i=r.sourceMap;i&&"undefined"!=typeof btoa&&(t+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(t,n,e.options)}(e,n,r)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},4589:n=>{"use strict";n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},2556:(n,e,r)=>{"use strict";var t=r(3379),a=r.n(t),i=r(7795),o=r.n(i),s=r(569),A=r.n(s),c=r(3565),l=r.n(c),d=r(9216),u=r.n(d),g=r(4589),h=r.n(g),m=r(1402),p={};p.styleTagTransform=h(),p.setAttributes=l(),p.insert=A().bind(null,"head"),p.domAPI=o(),p.insertStyleElement=u(),a()(m.Z,p),m.Z&&m.Z.locals&&m.Z.locals;const C=async n=>new Promise((e=>setTimeout(e,n))),b=(n,e)=>Math.floor(Math.random()*(e-n+1)+n),f=n=>Math.round(Math.round(1e4*n)/100);var E=r(1766);let y=0;const v=n=>new Promise((e=>{let r=new Image;r.src=n,r.addEventListener("load",(()=>e(fetch(n).then((n=>n.blob())))))}));class k{constructor(){this.className="samurai-kirby",this.images,this.sounds,this.soundOn=!0,this.roundStartDelay=800,this.difficulty=1,this.totalScore=0,this.level=0,this.attacker,this.scorePost=document.getElementById("score-post"),this.veil=document.querySelector("#samurai-kirby-screen > .veil"),this.calledAt,this.currentRoundTime=0,this.roundTimes=[],this.maxLives=3,this.lives=this.maxLives,this.attackers=[{name:"eyeballman",drawSpeed:800,suspenseTime:{min:3e3,max:5e3}},{name:"wheelbro",drawSpeed:500,suspenseTime:{min:2e3,max:5e3}},{name:"fishchef",drawSpeed:400,suspenseTime:{min:3e3,max:7e3}},{name:"dedede",drawSpeed:300,suspenseTime:{min:2e3,max:4e3}},{name:"metaknight",drawSpeed:200,suspenseTime:{min:4e3,max:9e3}}],this.buildLifeMarkers(),console.log("----------- initialized SamuraiKirbyGame!"),this.assignHandlers()}get phase(){return document.getElementById("samurai-kirby").className}set phase(n){document.getElementById("samurai-kirby").className=n}async loadImages(){let n=Date.now();this.images=await(async n=>{let e=n.keys().reduce(((e,r)=>(e[r.replace("./","")]=n(r),e)),{});document.querySelector("#samurai-kirby .loading-bar > .details").innerText="loading images...";let r=0;for(const n in e){r++;let t=await v(e[n]),a=Math.round(t.size/1024);y+=a;let i=f(r/Object.keys(e).length);document.querySelector("#samurai-kirby .loading-bar > .label").innerText=`${i}% (${y}kb)`,document.querySelector("#samurai-kirby .loading-bar > .filler").style.scale=`${i}% 1`,100===i&&(document.querySelector("#samurai-kirby .loading-bar > .details").innerText="done!")}return e})(r(8589)),console.log("loaded in",Date.now()-n),document.querySelector("#samurai-kirby .loading-bar > .details").innerText=`Loaded ${y}kb in ${Date.now()-n}ms`}loadSounds(){this.sounds={},this.loadSound("whiplow","mp3"),this.loadSound("gong","mp3"),this.loadSound("wind","mp3"),this.loadSound("call","mp3"),this.loadSound("strike","mp3"),this.loadSound("foul","mp3"),this.loadSound("goodclear","mp3"),this.loadSound("badclear","mp3"),this.loadSound("select","mp3")}loadSound(n,e){this.sounds[n]={},this.sounds[n].file=new E.Howl({src:[r(3180)(`./${this.className}/sounds/${n}.${e}`)],preload:!0})}playSound(n){console.log(">>>>> PLAYING",n),this.soundOn&&this.sounds[n].file.play()}stopSound(n){console.log("<<<<< STOPPING",n),this.soundOn&&this.sounds[n].file.stop()}createSprites(){this.kirbyElement=document.getElementById("kirby"),this.kirbyElement.style.backgroundImage=`url(${this.images["samuraikirby/drawing.png"]})`,this.kirbyElement.addEventListener("transitionend",(n=>{n.target.classList.add("bouncing"),C(200).then((()=>{n.target.classList.remove("bouncing")}))})),this.enemyElement=document.getElementById("enemy"),this.enemyElement.addEventListener("transitionend",(n=>{n.target.classList.add("bouncing"),C(200).then((()=>{n.target.classList.remove("bouncing")}))}))}assignHandlers(){document.getElementById("samurai-kirby-button").addEventListener("pointerdown",(n=>{this.handleAButtonClick(n)})),document.getElementById("quit-button").addEventListener("click",(n=>{this.handleQuitButtonClick(n)})),[...document.getElementsByClassName("level-segment")].forEach(((n,e)=>{let r=document.getElementById("level-bar-highlight");n.addEventListener("pointerdown",(n=>{this.playSound("whiplow");let t=`position-${e+1}`;console.log("adding class",t),r.className=t,this.difficulty=e+1}))}))}buildLifeMarkers(){let n=document.getElementById("lives-area");n.innerHTML="";for(let e=0;e<this.maxLives;e++)n.innerHTML+='\n        <div class="life-marker"></div>\n      '}async startGame(){console.log("--------------- starting SamuraiKirby --------------------"),this.phase="",document.getElementById(this.className).classList.remove("hidden"),this.playRound(0,this.roundStartDelay)}async resetForNewRound(){document.body.classList.remove("round-started"),this.phase="resetting",this.scorePost.classList.remove("showing"),this.kirbyElement.classList=["fighter"],this.enemyElement.classList=["fighter"],this.kirbyElement.style.backgroundImage=`url(${this.images["samuraikirby/drawing.png"]})`,await C(10),this.calledAt=0,this.currentRoundTime=0}async showScoreScreen(){this.veil.classList.add("showing"),await C(600),await this.resetForNewRound(),await C(300),this.printNumerals(this.level,document.getElementById("enemy-count-display"),"red");let n=this.roundTimes.sort(((n,e)=>n-e))[0];n&&this.printNumerals(n,document.getElementById("fastest-time-display"),"green"),this.printNumerals(this.totalScore,document.getElementById("total-score-display"),"white"),0===this.level?document.getElementById("fastest-time").style.opacity=0:document.getElementById("fastest-time").style.opacity=1,this.veil.classList.remove("showing"),this.phase="showing-score",this.totalScore>3e3?this.playSound("goodclear"):this.playSound("badclear")}async endGame(n){this.resetPlayerStatus(),n?(this.veil.classList.add("showing"),await C(600),await this.resetForNewRound(),await C(300),this.veil.classList.remove("showing"),this.playRound(0)):(await this.resetForNewRound(),document.getElementById("samurai-kirby").classList.add("hidden"),document.getElementById("game-select-screen").classList.remove("hidden"),this.veil.classList.add("showing"))}resetPlayerStatus(){this.lives=this.maxLives,this.level=0,this.totalScore=0,this.roundTimes=[],this.updateLivesDisplay()}loadAttacker(n){this.attacker=n,this.enemyElement.style.display="block",this.enemyElement.style.backgroundImage=`url(${this.images[n.name+"/waiting.png"]})`}displayScorePost(){this.printNumerals("00",this.scorePost),this.scorePost.classList.add("showing")}async printNumerals(n,e,r,t){r&&e.classList.add(r),e.innerHTML="",n.toString().split("").forEach((n=>{let r=document.createElement("div");r.className="score-numeral",r.style.backgroundImage=`url(${this.images[`numerals/tile00${n}.png`]})`,e.append(r)})),t&&(await C(t),e.classList.remove(r))}async displaySlashes(n){document.getElementById("slash-screen").style.backgroundColor="#000000",document.getElementById("slash-screen").style.display="block";let e=document.querySelector(".slash-mark:first-child"),r=document.querySelector(".slash-mark:last-child"),t=document.getElementById("center-slash"),a=b(0,360);e.style.rotate=`${a}deg`,r.style.rotate=`${a+25}deg`,e.classList.add("showing"),await C(10),e.classList.add("revealing"),await C(n),e.classList.remove("showing"),e.classList.remove("revealing"),r.classList.add("showing"),await C(10),r.classList.add("revealing"),await C(n),r.classList.remove("showing"),r.classList.remove("revealing"),document.getElementById("slash-screen").style.backgroundColor="transparent",t.classList.add("showing"),await C(n),t.classList.remove("showing"),document.getElementById("slash-screen").style.display="none"}async advanceToRound(n){let e=n<this.attackers.length?n:n-this.attackers.length;this.veil.classList.add("showing"),await C(600),this.phase="waiting",await this.resetForNewRound(),await C(300),this.veil.classList.remove("showing"),await C(this.roundStartDelay),this.playRound(e)}async playRound(n,e=0){await C(2),this.veil.classList.remove("showing"),this.printNumerals(n+1,document.getElementById("round-display"),"white"),this.printNumerals(this.totalScore,document.getElementById("player-score-display"),"white"),this.phase="waiting",this.loadAttacker(this.attackers[n]),await C(100),document.body.classList.add("round-started"),this.displayScorePost();let r=b(this.attacker.suspenseTime.min,this.attacker.suspenseTime.max);this.playSound("gong"),await C(400),this.playSound("wind"),await C(r),"waiting"===this.phase&&(this.calledAt=Date.now(),this.phase="called",this.stopSound("wind"),this.playSound("call"),this.callInterval=setInterval((()=>{let n=Math.round((Date.now()-this.calledAt)/5);this.printNumerals(n,this.scorePost),this.currentRoundTime=n}),1),await C(this.attacker.drawSpeed),"called"===this.phase&&(clearInterval(this.callInterval),this.phase="time-up",this.stopSound("call"),this.stopSound("wind"),this.playSound("strike"),await this.displaySlashes(90),document.getElementById("enemy").style.backgroundImage=`url(${this.images[this.attacker.name+"/attacking.png"]})`,this.kirbyElement.style.backgroundImage=`url(${this.images["samuraikirby/defeated.png"]})`,this.loseLife(2e3)))}async loseLife(n){this.lives--,this.updateLivesDisplay(),await C(n),0===this.lives?this.showScoreScreen():this.advanceToRound(this.level)}updateLivesDisplay(){let n=this.maxLives-this.lives;[...document.getElementsByClassName("life-marker")].forEach(((e,r)=>{r<n?e.classList.add("filled"):e.classList.remove("filled")}))}async showInstructions(){document.getElementById("samurai-kirby-button").classList.add("receded"),this.phase="showing-instructions",this.images||await this.loadImages(),this.createSprites(),document.getElementById("samurai-kirby-button").classList.remove("receded"),this.sounds||this.loadSounds()}async handleAButtonClick(){if("called"===this.phase){clearInterval(this.callInterval),this.phase="kirby-attacking",this.stopSound("call"),this.playSound("strike"),await this.displaySlashes(90),this.kirbyElement.style.backgroundImage=`url(${this.images["samuraikirby/attacking.png"]})`,document.getElementById("enemy").style.backgroundImage=`url(${this.images[this.attacker.name+"/defeated.png"]})`,this.roundTimes[this.level]=this.currentRoundTime;let n=(this.attacker.drawSpeed+250*this.level-5*this.currentRoundTime)*(this.level+1);this.totalScore+=n,document.getElementById("score-change-display").classList.add("showing"),this.printNumerals(n,document.getElementById("score-change-display"),"green",1800),this.printNumerals(this.totalScore,document.getElementById("player-score-display"),"white"),await C(1500),document.getElementById("score-change-display").classList.remove("showing"),this.level++,this.advanceToRound(this.level)}else if("waiting"===this.phase){clearInterval(this.callInterval),this.phase="fouled",this.stopSound("gong"),this.stopSound("wind"),this.playSound("foul"),this.enemyElement.style.backgroundImage=`url(${this.images[this.attacker.name+"/defeated.png"]})`;let n=Math.round((1e3-this.attacker.drawSpeed)/2);this.totalScore-=n,this.totalScore<=0&&(this.totalScore=0),document.getElementById("score-change-display").classList.add("showing"),this.printNumerals(n,document.getElementById("score-change-display"),"red",1200),this.printNumerals(this.totalScore,document.getElementById("player-score-display"),"white"),await this.loseLife(1e3),document.getElementById("score-change-display").classList.remove("showing")}else"showing-score"===this.phase?this.endGame(!0):"showing-instructions"===this.phase&&(await C(300),this.startGame())}async handleQuitButtonClick(){this.playSound("select"),await C(150),this.endGame()}}class _{constructor(n,e){this.type=n,this.positionClass=e,this.container=document.createElement("div"),this.container.classList.add("enemy-container"),this.container.classList.add(e),this.container.classList.add("obscured"),this.container.innerHTML=`\n      <div class="pole"></div>\n      <div class="kotd-enemy ${n}"></div>\n    `,this.container.style.left=b(.15*window.innerWidth,.85*window.innerWidth)+"px",document.querySelector("#kotd-screen .bottom-screen").appendChild(this.container),this.container.querySelector(".kotd-enemy").addEventListener("pointerdown",(async n=>{console.log("clicked enemy",n.target.classList),n.target.parentElement.classList.add("dead"),document.querySelector(".kotd-kirby.player").classList.add("fired"),await C(80),document.querySelector(".kotd-kirby.player").classList.remove("fired"),document.querySelector(".kotd-kirby.player").classList.add("firing"),await C(600),n.target.parentElement.parentElement.removeChild(n.target.parentElement)}))}get phase(){return document.getElementById("kotd").className}set phase(n){document.getElementById("kotd").className=n}}let B=0;const w=n=>new Promise((e=>{let r=new Image;r.src=n,r.addEventListener("load",(()=>e(fetch(n).then((n=>n.blob())))))}));class x{constructor(){this.className="kotd",this.images,this.sounds,this.soundOn=!0,this.level=0,this.interval,this.veil=document.querySelector("#kotd > .veil"),this.enemies=["waddledee","cappy","brontoburt","knucklejoe","waddledoo","chefkawasaki","bonkers","dedede","metaknight"],this.assignHandlers(),console.log("----------- KirbyOnTheDrawGame constructor finished ---\x3e")}get phase(){return document.getElementById("kotd").className}set phase(n){document.getElementById("kotd").className=n}async loadImages(){let n=Date.now();this.images=await(async n=>{let e=n.keys().reduce(((e,r)=>(e[r.replace("./","")]=n(r),e)),{});document.querySelector("#samurai-kirby .loading-bar > .details").innerText="loading images...";let r=0;for(const n in e){r++;let t=await w(e[n]),a=Math.round(t.size/1024);B+=a;let i=f(r/Object.keys(e).length);document.querySelector("#samurai-kirby .loading-bar > .label").innerText=`${i}% (${B}kb)`,document.querySelector("#samurai-kirby .loading-bar > .filler").style.scale=`${i}% 1`,100===i&&(document.querySelector("#samurai-kirby .loading-bar > .details").innerText="done!")}return e})(r(6027)),console.log("loaded in",Date.now()-n)}loadSounds(){this.sounds={}}loadSound(n,e){this.sounds[n]={},this.sounds[n].file=new E.Howl({src:[r(3180)(`./${this.className}/sounds/${n}.${e}`)],preload:!0})}playSound(n){console.log(">>>>> PLAYING",n),this.soundOn&&this.sounds[n].file.play()}stopSound(n){console.log("<<<<< STOPPING",n),this.soundOn&&this.sounds[n].file.stop()}async spawnEnemy(){let n=this.enemies[b(0,this.enemies.length-1)],e=new _(n,"bottom-edge");await C(100),e.container.classList.remove("obscured")}assignHandlers(){document.getElementById("kotd-button").addEventListener("click",(n=>{n.target.classList.add("invisible"),this.startGame()}))}async startGame(){console.log("--------------- starting KirbyOnTheDraw --------------------"),this.phase="",document.getElementById(this.className).classList.remove("hidden"),this.interval=setInterval((async()=>{this.spawnEnemy(),await C(300),this.spawnEnemy(),await C(300),this.spawnEnemy()}),3e3)}async printNumerals(n,e,r,t){}async showInstructions(){this.phase="showing-instructions",this.images||await this.loadImages()}async handleAButtonClick(){if("called"===this.phase){clearInterval(this.callInterval),this.phase="kirby-attacking",this.stopSound("call"),this.playSound("strike"),await this.displaySlashes(90),this.kirbyElement.style.backgroundImage=`url(${this.images["samuraikirby/attacking.png"]})`,document.getElementById("enemy").style.backgroundImage=`url(${this.images[this.attacker.name+"/defeated.png"]})`,this.roundTimes[this.level]=this.currentRoundTime;let n=(this.attacker.drawSpeed+250*this.level-5*this.currentRoundTime)*(this.level+1);this.totalScore+=n,document.getElementById("score-change-display").classList.add("showing"),this.printNumerals(n,document.getElementById("score-change-display"),"green",1800),this.printNumerals(this.totalScore,document.getElementById("player-score-display"),"white"),await C(1500),document.getElementById("score-change-display").classList.remove("showing"),this.level++,this.advanceToRound(this.level)}else if("waiting"===this.phase){clearInterval(this.callInterval),this.phase="fouled",this.stopSound("gong"),this.stopSound("wind"),this.playSound("foul"),this.enemyElement.style.backgroundImage=`url(${this.images[this.attacker.name+"/defeated.png"]})`;let n=Math.round((1e3-this.attacker.drawSpeed)/2);this.totalScore-=n,this.totalScore<=0&&(this.totalScore=0),document.getElementById("score-change-display").classList.add("showing"),this.printNumerals(n,document.getElementById("score-change-display"),"red",1200),this.printNumerals(this.totalScore,document.getElementById("player-score-display"),"white"),await this.loseLife(1e3),document.getElementById("score-change-display").classList.remove("showing")}else"showing-score"===this.phase?this.endGame(!0):"showing-instructions"===this.phase&&(await C(300),this.startGame())}async handleQuitButtonClick(){this.playSound("select"),await C(150),this.endGame()}}class S{constructor(){this.userSettings={userVolume:100},this.sounds={},this.soundOn=!0,this.game,this.games={"samurai-kirby":()=>new k,kotd:()=>new x}}get selectedGame(){let n;return[...document.getElementsByClassName("game-selection")].forEach((e=>{e.classList.contains("selected")&&(n=e)})),n}set selectedGame(n){this.selectedGame&&this.selectedGame.classList.remove("selected"),n.classList.add("selected")}playSound(n){this.soundOn&&this.sounds[n].file.play()}loadSound(n,e){this.sounds[n]={},this.sounds[n].file=new E.Howl({src:[r(2403)(`./${n}.${e}`)],preload:!0})}loadSounds(){this.loadSound("blip","mp3"),this.loadSound("select","mp3"),this.loadSound("whiplow","mp3")}}window.addEventListener("load",(()=>{document.getElementById("button-name").innerHTML="the button!",document.documentElement.style.setProperty("--actual-height",window.innerHeight+"px"),window.addEventListener("resize",(()=>{document.documentElement.style.setProperty("--actual-height",window.innerHeight+"px")}));let n=JSON.parse(localStorage.getItem("kirbyGamesSettings"));n?(E.Howler.volume(n.userVolume/100),document.querySelector("#sound-controls > input").value=n.userVolume):console.log("no local storage");let e=new S;e.loadSounds(),[...document.getElementsByClassName("game-selection")].forEach((n=>{n.addEventListener("pointerdown",(n=>{e.playSound("blip"),e.selectedGame=n.target}))})),document.getElementById("start-button").addEventListener("click",(async n=>{e.playSound("select");let r=e.selectedGame.id.split("-"),t=r.slice(0,r.length-1).join("-");console.log("selectedGame",t),e.game=e.games[t](),await C(150),document.getElementById("game-select-screen").classList.add("hidden"),"kotd"===t?(document.getElementById("samurai-kirby").classList.add("display-none"),document.getElementById("kotd").classList.remove("display-none")):"samurai-kirby"===t&&(document.getElementById("kotd").classList.add("display-none"),document.getElementById("samurai-kirby").classList.add("display-none")),e.game.showInstructions()})),document.querySelector("#sound-controls > input").addEventListener("change",(async n=>{e.userSettings.userVolume=n.target.value,localStorage.setItem("kirbyGamesSettings",JSON.stringify(e.userSettings)),E.Howler.volume(e.userSettings.userVolume/100),e.playSound("select")})),document.getElementById("mute-icon").addEventListener("pointerdown",(async n=>{E.Howler.volume(0),document.querySelector("#sound-controls > input").value="0"})),document.getElementById("full-icon").addEventListener("pointerdown",(async n=>{E.Howler.volume(1),e.playSound("select"),document.querySelector("#sound-controls > input").value="100"}))}))},6027:(n,e,r)=>{var t={"./ui/ammobartile.png":2458,"./ui/ammoslot.png":5292,"./ui/bgbottom.png":7025,"./ui/bgtop.png":1960,"./ui/curtainend.png":6957,"./ui/curtainmiddle.png":4738,"./ui/indoorlowerbg.png":5227,"./ui/kotdenemysheet.png":5719,"./ui/kotdinstructions.png":6863,"./ui/kotdkirbysheet.png":8322,"./ui/kotdlogo.png":4174,"./ui/kotdtitlescreen.png":9813,"./ui/poletile.png":2021,"./ui/scorebaredgeleft.png":2148,"./ui/scorebaredgeright.png":5579};function a(n){var e=i(n);return r(e)}function i(n){if(!r.o(t,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return t[n]}a.keys=function(){return Object.keys(t)},a.resolve=i,n.exports=a,a.id=6027},8589:(n,e,r)=>{var t={"./dedede/attacking.png":82,"./dedede/defeated.png":9306,"./dedede/waiting.png":1060,"./eyeballman/attacking.png":9804,"./eyeballman/defeated.png":2933,"./eyeballman/waiting.png":4582,"./fishchef/attacking.png":3312,"./fishchef/defeated.png":1992,"./fishchef/waiting.png":6713,"./metaknight/attacking.png":1924,"./metaknight/defeated.png":6091,"./metaknight/waiting.png":5397,"./numerals/tile000.png":5954,"./numerals/tile001.png":4274,"./numerals/tile002.png":3026,"./numerals/tile003.png":3826,"./numerals/tile004.png":1170,"./numerals/tile005.png":7504,"./numerals/tile006.png":8045,"./numerals/tile007.png":513,"./numerals/tile008.png":7351,"./numerals/tile009.png":6354,"./samuraikirby/attacking.png":5359,"./samuraikirby/defeated.png":2859,"./samuraikirby/drawing.png":1174,"./samuraikirby/waiting.png":654,"./ui/exclamationpoint.png":6386,"./ui/exclamationpointfilled.png":4909,"./ui/levelbar.png":8405,"./ui/qdborder.png":2154,"./ui/qdlogo.png":2954,"./ui/quickdrawbg.png":7837,"./ui/quickdrawinstructions.png":5677,"./ui/scorepostwide.png":9623,"./ui/sklogo.png":7016,"./ui/sklogoleft.png":3578,"./ui/sklogoright.png":5305,"./ui/slashcenter.png":730,"./ui/slashmark1.png":4237,"./ui/slashmark2.png":6978,"./ui/star.png":4930,"./ui/teardrop.png":538,"./ui/xmark.png":2605,"./wheelbro/attacking.png":5404,"./wheelbro/defeated.png":2026,"./wheelbro/waiting.png":9157};function a(n){var e=i(n);return r(e)}function i(n){if(!r.o(t,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return t[n]}a.keys=function(){return Object.keys(t)},a.resolve=i,n.exports=a,a.id=8589},2403:(n,e,r)=>{var t={"./blip.mp3":7601,"./select.mp3":8401,"./whiphigh.mp3":4731,"./whiplow.mp3":407};function a(n){var e=i(n);return r(e)}function i(n){if(!r.o(t,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return t[n]}a.keys=function(){return Object.keys(t)},a.resolve=i,n.exports=a,a.id=2403},3180:(n,e,r)=>{var t={"./samurai-kirby/sounds/applause.mp3":4084,"./samurai-kirby/sounds/badclear.mp3":5877,"./samurai-kirby/sounds/blip.mp3":6452,"./samurai-kirby/sounds/call.mp3":5217,"./samurai-kirby/sounds/foul.mp3":2969,"./samurai-kirby/sounds/gong.mp3":1883,"./samurai-kirby/sounds/goodclear.mp3":1979,"./samurai-kirby/sounds/select.mp3":8480,"./samurai-kirby/sounds/strike.mp3":4995,"./samurai-kirby/sounds/whiphigh.mp3":2200,"./samurai-kirby/sounds/whiplow.mp3":8897,"./samurai-kirby/sounds/wind.mp3":4585,"./title/sounds/blip.mp3":7601,"./title/sounds/select.mp3":8401,"./title/sounds/whiphigh.mp3":4731,"./title/sounds/whiplow.mp3":407};function a(n){var e=i(n);return r(e)}function i(n){if(!r.o(t,n)){var e=new Error("Cannot find module '"+n+"'");throw e.code="MODULE_NOT_FOUND",e}return t[n]}a.keys=function(){return Object.keys(t)},a.resolve=i,n.exports=a,a.id=3180},816:(n,e,r)=>{"use strict";n.exports=r.p+"f2b44bf1b15524c83949.svg"},792:(n,e,r)=>{"use strict";n.exports=r.p+"d9ce4824fe36a96b9388.svg"},2587:(n,e,r)=>{"use strict";n.exports=r.p+"b9d19ebcddd29a5be568.otf"},1852:(n,e,r)=>{"use strict";n.exports=r.p+"0f100394ac35a715e474.png"},2458:(n,e,r)=>{"use strict";n.exports=r.p+"8a1b219dedd8ec15df0f.png"},5292:(n,e,r)=>{"use strict";n.exports=r.p+"adf7e9211957f0aa00bb.png"},7025:(n,e,r)=>{"use strict";n.exports=r.p+"ba511d59913cdefafdd5.png"},1960:(n,e,r)=>{"use strict";n.exports=r.p+"4d1bd0c307c63a4445af.png"},6957:(n,e,r)=>{"use strict";n.exports=r.p+"8891d75771a98074a6b2.png"},4738:(n,e,r)=>{"use strict";n.exports=r.p+"5eb0a927e0e6c445fb37.png"},5227:(n,e,r)=>{"use strict";n.exports=r.p+"a6f80458c4950b260a8d.png"},5719:(n,e,r)=>{"use strict";n.exports=r.p+"9cacbb9ddbba453c0a1e.png"},6863:(n,e,r)=>{"use strict";n.exports=r.p+"5647eedf810dd355bd1b.png"},8322:(n,e,r)=>{"use strict";n.exports=r.p+"2ad948608dc3e21627b8.png"},4174:(n,e,r)=>{"use strict";n.exports=r.p+"da145274e34f15465900.png"},9813:(n,e,r)=>{"use strict";n.exports=r.p+"3b5c2eee53d01826785c.png"},2021:(n,e,r)=>{"use strict";n.exports=r.p+"66a0a8659e9ada0afdb6.png"},2148:(n,e,r)=>{"use strict";n.exports=r.p+"9864d8778aa9d7fc9bbf.png"},5579:(n,e,r)=>{"use strict";n.exports=r.p+"d064fd1acda619d59683.png"},82:(n,e,r)=>{"use strict";n.exports=r.p+"50ff6966550e3bfb6f60.png"},9306:(n,e,r)=>{"use strict";n.exports=r.p+"d733eadee48aa27f4a66.png"},1060:(n,e,r)=>{"use strict";n.exports=r.p+"c0f5a51f44f9a8882053.png"},9804:(n,e,r)=>{"use strict";n.exports=r.p+"0ab193999f194363a4a5.png"},2933:(n,e,r)=>{"use strict";n.exports=r.p+"4048de1045842bd1c485.png"},4582:(n,e,r)=>{"use strict";n.exports=r.p+"a5108e35b6322d5a4a23.png"},3312:(n,e,r)=>{"use strict";n.exports=r.p+"7aff775b9e7a3d8ecb52.png"},1992:(n,e,r)=>{"use strict";n.exports=r.p+"09d8550f1f52d4c9a297.png"},6713:(n,e,r)=>{"use strict";n.exports=r.p+"fc71b2e4634439c02750.png"},1924:(n,e,r)=>{"use strict";n.exports=r.p+"9384962a886522e171f5.png"},6091:(n,e,r)=>{"use strict";n.exports=r.p+"a89ab7907ebedaeca8fd.png"},5397:(n,e,r)=>{"use strict";n.exports=r.p+"688bdfe5fe235127a2f1.png"},5954:(n,e,r)=>{"use strict";n.exports=r.p+"5a17e4f8aac8c0f22365.png"},4274:(n,e,r)=>{"use strict";n.exports=r.p+"0e6bb95133656d93b79e.png"},3026:(n,e,r)=>{"use strict";n.exports=r.p+"7d01b5cee2b13c47aa2a.png"},3826:(n,e,r)=>{"use strict";n.exports=r.p+"eee8bfd438c04d3bde44.png"},1170:(n,e,r)=>{"use strict";n.exports=r.p+"53831d64cec85f1cb8b1.png"},7504:(n,e,r)=>{"use strict";n.exports=r.p+"494e9119da20cf596740.png"},8045:(n,e,r)=>{"use strict";n.exports=r.p+"ba4369e5a19daaa4edec.png"},513:(n,e,r)=>{"use strict";n.exports=r.p+"a5ed977abef063cd4610.png"},7351:(n,e,r)=>{"use strict";n.exports=r.p+"276f351656d711e43a61.png"},6354:(n,e,r)=>{"use strict";n.exports=r.p+"ed3becc4f6572bcff5e8.png"},5359:(n,e,r)=>{"use strict";n.exports=r.p+"f53de81dc03b40b178c5.png"},2859:(n,e,r)=>{"use strict";n.exports=r.p+"825137ee6a1a4d6ed8be.png"},1174:(n,e,r)=>{"use strict";n.exports=r.p+"ba998705bebe1851f407.png"},654:(n,e,r)=>{"use strict";n.exports=r.p+"98a4e9fd2800400b8974.png"},6386:(n,e,r)=>{"use strict";n.exports=r.p+"f81342cd3db025e891d5.png"},4909:(n,e,r)=>{"use strict";n.exports=r.p+"4891ecf6dc59555d6a83.png"},8405:(n,e,r)=>{"use strict";n.exports=r.p+"19a71d41cf8c158cc539.png"},2154:(n,e,r)=>{"use strict";n.exports=r.p+"1d0d4f4555a86cba4061.png"},2954:(n,e,r)=>{"use strict";n.exports=r.p+"081be14a12e1b4ef62e7.png"},7837:(n,e,r)=>{"use strict";n.exports=r.p+"66e5ac872c07d6838584.png"},5677:(n,e,r)=>{"use strict";n.exports=r.p+"78f8af2aa407b6ca79a6.png"},9623:(n,e,r)=>{"use strict";n.exports=r.p+"60ca51382a64db614f58.png"},7016:(n,e,r)=>{"use strict";n.exports=r.p+"ab2d5a4e2942b3a4385a.png"},3578:(n,e,r)=>{"use strict";n.exports=r.p+"dc615afa8814748fa1cb.png"},5305:(n,e,r)=>{"use strict";n.exports=r.p+"f2fa8c3f17946c844115.png"},730:(n,e,r)=>{"use strict";n.exports=r.p+"db929c0a8e9742312052.png"},4237:(n,e,r)=>{"use strict";n.exports=r.p+"351772b68af785a2cd1d.png"},6978:(n,e,r)=>{"use strict";n.exports=r.p+"17a0ce1d0de53811b72a.png"},4930:(n,e,r)=>{"use strict";n.exports=r.p+"75d82272461766f6a01c.png"},538:(n,e,r)=>{"use strict";n.exports=r.p+"004ed8ba3def5a03b823.png"},2605:(n,e,r)=>{"use strict";n.exports=r.p+"1fce6e64079cff41e92a.png"},5404:(n,e,r)=>{"use strict";n.exports=r.p+"417b32bd47da30a5e457.png"},2026:(n,e,r)=>{"use strict";n.exports=r.p+"4e37eb23c1b2bec42a6f.png"},9157:(n,e,r)=>{"use strict";n.exports=r.p+"1dba49ebf03a72c5678f.png"},4084:(n,e,r)=>{"use strict";n.exports=r.p+"0fa5be3da0352af232f7.mp3"},5877:(n,e,r)=>{"use strict";n.exports=r.p+"5334745a0683821f42e2.mp3"},6452:(n,e,r)=>{"use strict";n.exports=r.p+"4ee5a7523f47c7332845.mp3"},5217:(n,e,r)=>{"use strict";n.exports=r.p+"4722f4583fd6a0b547ad.mp3"},2969:(n,e,r)=>{"use strict";n.exports=r.p+"fc621369c48265147af3.mp3"},1883:(n,e,r)=>{"use strict";n.exports=r.p+"8850393ef6e809cedffb.mp3"},1979:(n,e,r)=>{"use strict";n.exports=r.p+"ca51074cf37c60e7a687.mp3"},8480:(n,e,r)=>{"use strict";n.exports=r.p+"37ffd7f98a0e6c431ab7.mp3"},4995:(n,e,r)=>{"use strict";n.exports=r.p+"4585f4d0eb53057b6caf.mp3"},2200:(n,e,r)=>{"use strict";n.exports=r.p+"80ba86608a221382d734.mp3"},8897:(n,e,r)=>{"use strict";n.exports=r.p+"e6c1e7b2fa1e202a4a62.mp3"},4585:(n,e,r)=>{"use strict";n.exports=r.p+"8d11e470ad519b20045a.mp3"},7601:(n,e,r)=>{"use strict";n.exports=r.p+"4ee5a7523f47c7332845.mp3"},8401:(n,e,r)=>{"use strict";n.exports=r.p+"37ffd7f98a0e6c431ab7.mp3"},4731:(n,e,r)=>{"use strict";n.exports=r.p+"80ba86608a221382d734.mp3"},407:(n,e,r)=>{"use strict";n.exports=r.p+"e6c1e7b2fa1e202a4a62.mp3"}},n=>{n(n.s=2556)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,