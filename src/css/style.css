:root {
  --actual-height: 100vh;
  --game-screen-width: 100vw;
  --game-screen-height: calc(var(--game-screen-width) / (16/14));
  --control-panel-bg-color: #586838;
}

@font-face {
  font-family: kirbyFont;
  src: url(../media/Connection.otf);
}

*, * *, * * * {
  box-sizing: border-box;
  margin: 0;
}

body {
  font-family: sans-serif;
  image-rendering: pixelated;
  width: 100%;
  height: var(--actual-height);
  display: flex;
  flex-direction: column;
  align-items: stretch;
  justify-content: space-between;
  overflow: hidden;
  background-color: orange;
}

.hidden {
  transition: none !important;
  opacity: 0 !important;
  pointer-events: none !important;
  display: none !important;
}

#game-select {
  background-color: #aaa;
  flex-grow: 1;
  transition: opacity 300ms ease;
}

.game-selection {
  padding: 3rem 1rem;
  display: flex;
  flex-direction: column;
  align-items: center;
}

#quick-draw-logo {
  background-image: url("../media/quickdraw/images/ui/qdlogo.png");
  background-repeat: no-repeat;
  background-size: cover;
  height: 4rem;
  width: calc(4rem * (205/50));
  border-image-source: url("../media/quickdraw/images/ui/qdborder.png");
  border-image-slice: 33.3% 33.3% 33.3% 33.3%;
  border-image-width: calc(4rem * 0.32);
  border-image-outset: 0 calc(4rem * 0.32);
  border-image-repeat: stretch stretch;
  border-style: solid;
}

#quick-draw {
  font-family: kirbyFont;
  /* font-weight: bold; */
  color: #402a00;
  text-shadow:
    -1px 0 0 #222, 
    1px 0 0 #222,
    0 -1px 0 #222,
    0 1px 0 #222
  ;
  letter-spacing: 1px;
  width: 100vw;
  flex-grow: 1;
  display: flex;
  flex-direction: column;
  transition: opacity 300ms ease;
}

#quick-draw.resetting *:not(.player-status, .veil) {
  transition-duration: 0ms !important;
}

#quick-draw-screen {
  position: relative;
  width: var(--game-screen-width);
  height: var(--game-screen-height);
  background-image: url(../media/quickdraw/images/ui/quickdrawbg.png);
  background-repeat: no-repeat;
  background-size: cover;
  background-position: top center;
  overflow: hidden;
}

#quick-draw-screen > .veil {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--game-screen-width);
  height: var(--game-screen-height);
  background-color: white;
  opacity: 0;
  transition: opacity 600ms ease;
  z-index: 2;
}
#quick-draw-screen > .veil.showing {
  opacity: 1;
}
#slash-screen, #score-screen {
  position: absolute;
  top: 0;
  left: 0;
  width: var(--game-screen-width);
  height: var(--game-screen-height);
  background-color: #000000;
  z-index: 1;
  display: none;
}
.slash-mark {
  position: absolute;
  background-repeat: no-repeat;
  background-size: cover;
  transform-origin: center;
  left: 50%;
  top: 50%;
  translate: -50% -50%;
  display: none;
}
.slash-mark.showing {
  display: block;
}
.slash-mark::after {
  content: '';
  position: absolute;
  width: inherit;
  height: inherit;
  background-color: #000000;
  /* opacity: 0.5; */
  transform-origin: right;
  transform: scaleX(1);
  transition: transform 80ms linear;
}
.slash-mark.revealing::after {
  transform: scaleX(0);
}
.slash-mark:first-child {
  --height: calc(var(--game-screen-height) * 0.6);
  height: var(--height);
  width: calc(var(--height) * (180/96));
  background-image: url(../media/quickdraw/images/ui/slashmark1.png);
}
#center-slash {
  --height: calc(var(--game-screen-height) * 0.2);
  height: var(--height);
  width: calc(var(--height) * (54/32));
  background-image: url(../media/quickdraw/images/ui/slashcenter.png);
  animation: blink 2ms linear infinite;
}
#center-slash::after {
  display: none;
}
.slash-mark:last-child {
  --height: calc(var(--game-screen-height) * 0.9);
  height: var(--height);
  width: calc(var(--height) / (144/65));
  background-image: url(../media/quickdraw/images/ui/slashmark2.png);
}

#score-screen {
  background-color: transparent;
  font-size: calc(var(--game-screen-height) * 0.08);
  display: grid;
  grid-template-rows: 
    calc(var(--game-screen-height) / 8) 
    auto
    1fr
    1fr
  ;
  grid-template-columns: 1fr;
  justify-items: center;
  opacity: 0;
  z-index: 1;
  height: var(--game-screen-height);
}

#quick-draw.showing-score #score-screen {
  opacity: 1;
}

#enemies-defeated, #fastest-time {
  display: flex;
  gap: calc(var(--game-screen-height) / 30);
  align-items: center;

  align-items: baseline;
  align-self: center;
}

#enemies-defeated > span:last-child, 
#fastest-time > span:last-child {
  translate: 0 25%;
}

#enemies-defeated {
  padding-top: calc(var(--game-screen-height) * 0.07);
}

#fastest-time {
  align-self: stretch;
}

#score-kirby {
  position: relative;
  width: calc(var(--game-screen-height) * 0.45);
  height: calc(var(--game-screen-height) * 0.45);
  translate: -17% 3%;
  background-image: url(../media/quickdraw/images/samuraikirby/waiting.png);
}

#total-score {
  display: flex;
  flex-direction: column;
  align-items: center;
  align-self: flex-end;
  font-size: calc(var(--game-screen-height) * 0.06);
  gap: calc(var(--game-screen-height) * 0.01);
  padding: calc(var(--game-screen-height) * 0.04) 0;
}

.score-numeral 
{
  filter: 
    drop-shadow(2px 0px rgb(255, 255, 255))
    drop-shadow(-1px 0px rgb(255, 255, 255))
    drop-shadow(0px -1px rgb(255, 255, 255))
    drop-shadow(0px 2px rgb(255, 255, 255))
  ;
}

.score-screen-display {
  opacity: 0;
  scale: 0.8;
}
#total-score-display {
  display: flex;
  align-items: center;
  transform-origin: center;
  opacity: 0;
  scale: 0.8;
}

#total-score-display > .score-numeral {
  width: calc(var(--game-screen-height) * 0.07);
  height: calc(var(--game-screen-height) * 0.07 * (16/9));
}

#quick-draw.showing-score .score-screen-display {
  animation: zoom-fade-in 1000ms ease forwards;
}
#quick-draw.showing-score #enemy-count-display {
  animation-delay: 1000ms;
}
#quick-draw.showing-score #fastest-time-display {
  animation-delay: 1800ms;
}
#quick-draw.showing-score #total-score-display {
  animation-delay: 2600ms;
}

#quick-draw-controls {
  background-color: var(--control-panel-bg-color);
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: flex-start;
  gap: calc(var(--game-screen-height) * 0.1);
  flex-grow: 1;
  padding-top: calc(var(--game-screen-height) * 0.2);
}

#quick-draw #quick-draw-button {
  border-radius: 50%;
  background-color: red;
  color: #ddd;
  font-weight: bold;
  width: 50vw;
  height: 50vw;
  transition: background-color 200ms ease !important;
  transition-duration: 200ms ease !important;
}

#quick-draw.waiting #quick-draw-button,
#quick-draw.resetting #quick-draw-button,
#quick-draw #quick-draw-button
{
  background-color: rgb(150, 82, 82);
}

#quick-draw #quick-draw-button::after {
  content: '';
}
#quick-draw.waiting #quick-draw-button::after,
#quick-draw.resetting #quick-draw-button::after,
#quick-draw #quick-draw-button::after
{
  content: 'NOT YET';
  font-size: 2rem;
}

#quick-draw.called #quick-draw-button::after {
  content: 'DRAW!';
  font-size: 2.5rem;
}

#quick-draw.time-up #quick-draw-button::after {
  content: 'TOO SLOW';
  font-size: 1.5rem;
}

#quick-draw.showing-score #quick-draw-button::after {
  content: 'TRY AGAIN';
  font-size: 1.5rem;
}

#quick-draw.kirby-attacking #quick-draw-button {
  background-color: rgb(0, 184, 0);
}

#quick-draw.kirby-attacking #quick-draw-button::after {
  content: 'KIRBY WINS';
  font-size: 2.5rem;
}
#quick-draw.kirby-attacking #quick-draw-button {
  pointer-events: none;
}
#quick-draw.called #quick-draw-button {
  background-color: red;
}

#quick-draw:not(.waiting, .called, .time-up, .kirby-attacking, .showing-score) #quick-draw-button {
  pointer-events: none;
  background-color: rgb(150, 82, 82);
}
/* #quick-draw.fouled #quick-draw-button,
#quick-draw.time-up #quick-draw-button {
  pointer-events: none;
  background-color: rgb(150, 82, 82);
} */
#quick-draw.fouled #quick-draw-button::after {
  content: 'FOUL';
  font-size: 1.5rem;
}
#quick-draw.fouled #quick-draw-button {
  background-color: rgb(83, 67, 67);
}

#quit-button {
  background-color: rgb(120, 120, 120);
  font-size: 2rem;
  color: white;
  font-weight: bold;
  padding: 1rem 2rem;
  border-radius: 2rem;
  display: none;
}

#quick-draw.showing-score #quit-button {
  display: block;
}

.fighter {
  position: absolute;
  background-repeat: no-repeat;
  background-size: contain;
  transform-origin: 80% 80%;
  transition: translate 300ms ease, left 100ms ease, right 100ms ease, bottom 100ms ease;
}

#kirby {
  width: calc(var(--game-screen-height) * 0.45);
  height: calc(var(--game-screen-height) * 0.45);
  left:  calc(var(--game-screen-height) * 0.03);
  bottom:  calc(var(--game-screen-height) / 10);
}

#kirby::after {
  content: '';
  position: absolute;
  bottom: 35%;
  right: 20%;
  --height: calc(var(--game-screen-height) * 0.1);
  height: var(--height);
  width: calc(var(--height) * (12/16));
  background-image: url(../media/quickdraw/images/ui/teardrop.png);
  background-repeat: no-repeat;
  background-size: contain;
  display: none;
}

#quick-draw.fouled #kirby::after {
  display: block;
  animation: drip 1000ms ease forwards;
}

#quick-draw.fouled #enemy,
#quick-draw.fouled #kirby
{
  animation: hop 300ms ease forwards;
}

#quick-draw.fouled #kirby {
  animation-delay: 60ms;
}

#enemy {
  height: calc(var(--game-screen-height) * 0.6);
  width: calc((var(--game-screen-height) * 0.6) / (96/128));
  left:  unset;
  right: calc(var(--game-screen-height) / 18);
  bottom:  calc(var(--game-screen-height) / 2.2);
  display: none;
}

#kirby.bouncing {
  animation: bounce-right 100ms ease alternate infinite forwards;
}

#enemy.bouncing {
  animation: bounce-left 100ms ease alternate infinite forwards;
}

body:not(.round-started) #kirby {
  translate: calc(var(--game-screen-height) * -0.5) 0;
}

body:not(.round-started) #enemy {
  translate: 100% 0;
}

#quick-draw.kirby-attacking #enemy {
  animation: fly-off-right 800ms linear forwards;
  animation-delay: 200ms
}

#quick-draw.kirby-attacking #kirby {
  left:  calc(var(--game-screen-height) * 0.25);
  bottom:  calc(var(--game-screen-height) / 4.5);
  transition-delay: 200ms;
}

#quick-draw.time-up #kirby {
  animation: fly-off-left 400ms linear forwards;
  animation-delay: 200ms
}

#quick-draw.time-up #enemy {
  right: calc(var(--game-screen-height) / 6);
  bottom:  calc(var(--game-screen-height) / 3.5);
  transition-delay: 200ms;
}

#exclamation-point {
  position: absolute;
  background-image: url(../media/quickdraw/images/ui/exclamationpointfilled.png);
  background-repeat: no-repeat;
  background-size: contain;
  width: calc(var(--game-screen-height) * 0.3125);
  height: calc(var(--game-screen-height) * 0.3125);
  left: 50%;
  top: 50%;
  translate: -50% -50%;
  opacity: 0;
  scale: 0.7;
  transition: opacity 200ms ease, scale 200ms ease;
  animation: flash 60ms linear infinite;
}

#quick-draw.called #exclamation-point {
  opacity: 1;
  scale: 1;
}

#score-post {
  position: absolute;
  bottom: 0;
  right: calc(var(--game-screen-height) / 40);
  --height: calc(var(--game-screen-height) / 4);
  height: var(--height);
  width: calc(var(--height) * 1.5);
  background-image: url(../media/quickdraw/images/ui/scorepostwide.png);
  background-repeat: no-repeat;
  background-size: contain;
  display: flex;
  align-items: center;
  justify-content: center;
  padding-right: 0.5%;
  translate: 0 100%;
  transition: translate 500ms ease;
}

#score-post > .score-numeral {
  filter: unset;
}

#quick-draw.fouled #score-post::after {
  content: '';
  position: absolute;
  left: 50%;
  top: 50%;
  translate: -50% -50%;
  width: calc(var(--game-screen-height) * 0.15);
  height: calc(var(--game-screen-height) * 0.15);
  background-image: url(../media/quickdraw/images/ui/xmark.png);
  background-repeat: no-repeat;
  background-size: contain;
  rotate: -90deg;
}

#score-post.showing {
  translate: none;
}

.score-numeral {
  width: calc(var(--game-screen-height) * 0.05625);
  height: calc(var(--game-screen-height) * 0.05625 * (16/9));
  background-repeat: no-repeat;
  background-size: cover;
  background-position: left;
}

.white {
  filter: invert();
}

.green {
  filter: invert() sepia(100%) hue-rotate(30deg) saturate(100);
}

.red {
  filter: invert() sepia(100%) hue-rotate(289deg) saturate(220);
}

.brown {
  filter: invert() sepia(100%) hue-rotate(313deg) saturate(280) brightness(0.25);
}

#player-score, #player-level {
  position: absolute;
  top: calc(var(--game-screen-height) * 1.05);
  left: 0;
  font-size: 1.5rem;
  margin-left: 1rem;
  color: white;
}

#player-score-display, #score-change-display, #player-level, #fastest-time-display {
  display: flex;
}

#score-change-display {
  position: absolute;
  top: 0;
  left: calc(100% + (var(--game-screen-height) / 30));
  opacity: 0;
  scale: 0.75;
  transform-origin: left;
  transition: opacity 300ms ease;
  z-index: 1;
  /* display: none; */
}

#score-change-display.showing {
  opacity: 1;
  animation: slide-left 300ms ease forwards;
}

.player-status {
  opacity: 0;
  transition: opacity 300ms ease;
}

body.round-started #quick-draw:not(.showing-score, .resetting) .player-status {
  opacity: 1;
}

#player-level {
  display: flex;
  align-items: center;
  gap: 1rem;
  left: unset;
  right: 0;
  margin-right: 1rem;
}

#lives-area {
  position: absolute;
  top: calc(var(--game-screen-height) / 60);
  left: calc(var(--game-screen-height) / 60);
  display: flex;
  gap: calc(var(--game-screen-height) / 60);
}

#lives-area > .life-marker {
  width: calc(var(--game-screen-height) * 0.1);
  height: calc(var(--game-screen-height) * 0.1);
  background-image: url(../media/quickdraw/images/ui/xmark.png);
  background-repeat: no-repeat;
  background-size: contain;
  opacity: 0.3;
  transition: opacity 300ms ease;
}

#lives-area > .life-marker.filled {
  opacity: 1
}

@keyframes flash {
  from {
    background-image: url(../media/quickdraw/images/ui/exclamationpointfilled.png);
  }
  to {
    background-image: url(../media/quickdraw/images/ui/exclamationpoint.png);
  }
}

@keyframes blink {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}

@keyframes fly-off-right {
  from {
    translate: 0;
    rotate: 0;
    scale: 1;
  }
  50% {
    translate: 5% -80%;
    scale: 0.75;
  }
  to {
    translate: -10% 0;
    rotate: 430deg;
    scale: 0.2;
  }
}

@keyframes fly-off-left {
  from {
    translate: 0;
    rotate: 0;
    scale: 1;
  }
  50% {
    translate: -5% -60%;
    scale: 1.05;
  }
  to {
    translate: -40% -20%;
    rotate: -180deg;
    scale: 1.1;
  }
}

@keyframes drip {
  from {
    translate: 0 0;
  }
  to {
    translate: 0 calc(var(--game-screen-height) * 0.08);
  }
}
@keyframes hop {
  from {
    translate: 0 0;
  }
  50% {
    translate: 0 calc(var(--game-screen-height) * -0.05);
  }
  to {
    translate: 0 0;
  }
}

@keyframes slide-left {
  from {
    translate: calc(var(--game-screen-height) / 12) 0;
  }
  to {
    translate: 0 0;
  }
}

@keyframes zoom-fade-in {
  from {
    opacity: 0;
    scale: 0.8;
  }
  to {
    opacity: 1;
    scale: 1;
  }
}

@keyframes bounce-left {
  from {
    margin-right: 0;
  }
  to {
    margin-right: calc(var(--game-screen-height) / 80);
  }
}

@keyframes bounce-right {
  from {
    margin-left: 0;
  }
  to {
    margin-left: calc(var(--game-screen-height) / 80);
  }
}
